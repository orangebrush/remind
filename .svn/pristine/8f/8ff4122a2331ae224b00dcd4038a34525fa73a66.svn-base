//
//  cardManngerTableViewCell.swift
//  Remind
//
//  Created by zxd on 2017/12/7.
//  Copyright © 2017年 ganyi. All rights reserved.
//

import UIKit
import Kingfisher
protocol cardManngerBtnDelegate : class {
    func addOrDeleteBtnClick(_ indexPath:IndexPath)
}
class cardManngerTableViewCell: UITableViewCell {
    weak var delegete : cardManngerBtnDelegate?
    fileprivate var myindexPath = IndexPath()
    fileprivate lazy var mainBackView : UIView = {
        let view = UIView.init()
        view.backgroundColor = UIColor.white
        return view
    }()
    fileprivate lazy var addBtn : UIButton = {
        let btn = UIButton.init(type: .custom)
        return btn
    }()
    fileprivate lazy var contentBackView : UIView = {
        let view = UIView.init()
        view.backgroundColor = UIColor.white
        return view
    }()
    fileprivate lazy var iconImage : UIImageView = {
        let image = UIImageView.init()
        return image
    }()
    fileprivate lazy var nameLable : UILabel = {
        let lable = UILabel.init()
        lable.textColor = UIColor.word
        lable.font = UIFont.normal
        return lable
    }()
    fileprivate lazy var remaindLable : UILabel = {
        let lable = UILabel.init()
        lable.backgroundColor = UIColor.red
        lable.layer.cornerRadius = 2.5
        lable.clipsToBounds = true
    
        return lable
    }()
    fileprivate lazy var detailLabel : UILabel = {
        let lable = UILabel.init()
        lable.font = UIFont.content
        lable.textColor = UIColor.subSubWord
        return lable
    }()
    fileprivate lazy var cutLabel : UILabel = {
        let lable = UILabel.init()
        lable.backgroundColor = UIColor.separator
        return lable
    }()
    
    override init(style: UITableViewCellStyle, reuseIdentifier: String?) {
        super.init(style: style, reuseIdentifier: reuseIdentifier)
        self.backgroundColor = UIColor.white
        mainBackView.frame = CGRect.init(x: 0, y: 0, width: keyDeviceWidth, height: 80)
        self.addSubview(mainBackView)
        mainBackView.addSubview(contentBackView)
        mainBackView.addSubview(addBtn)
        contentBackView.addSubview(iconImage)
        contentBackView.addSubview(nameLable)
        contentBackView.addSubview(remaindLable)
        contentBackView.addSubview(detailLabel)
        self.addSubview(cutLabel)
        
        addBtn.addTarget(self, action: #selector(cardManngerTableViewCell.addDeleteBtnClick), for: .touchUpInside)
        addBtn.snp.makeConstraints { (make) in
            make.centerY.equalToSuperview()
            make.left.equalTo(8)
            make.width.height.equalTo(34)
        }
        contentBackView.snp.makeConstraints { (make) in
            make.left.equalTo(addBtn.snp.right).offset(13)
            make.height.right.centerY.equalToSuperview()
        }
        iconImage.snp.makeConstraints { (make) in
            make.centerY.equalToSuperview()
            make.left.equalTo(0)
            make.width.height.equalTo(34)
        }
        nameLable.snp.makeConstraints { (make) in
            make.left.equalTo(iconImage.snp.right).offset(10)
            make.top.equalTo(21)
            make.width.equalTo(100)
            make.height.equalTo(20)
            make.bottom.equalTo(detailLabel.snp.top)
            
        }
        remaindLable.snp.makeConstraints { (make) in
            make.left.equalTo(nameLable.snp.right).offset(5)
            make.centerY.lessThanOrEqualTo(nameLable)
            make.width.height.equalTo(5)
        }
        detailLabel.snp.makeConstraints { (make) in
            make.left.equalTo(nameLable)
            make.right.equalTo(-43)
            make.height.equalTo(18)
           
        }
        cutLabel.snp.makeConstraints { (make) in
            make.left.right.equalTo(0)
            make.height.equalTo(kLineHeight)
            make.bottom.equalTo(0)
        }
        
    }
    func configCell(_ indexPath:IndexPath,_ card:CardSetting){
        if indexPath.section == 0 || indexPath.section == 2{
            addBtn.setImage(#imageLiteral(resourceName: "cardmanage_btn_add").withRenderingMode(.alwaysOriginal), for: .normal)
        }else{
            if card.isDisplay{
                 addBtn.setImage(#imageLiteral(resourceName: "cardmanage_btn_lost_disab").withRenderingMode(.alwaysOriginal), for: .normal)
            }else{
                 addBtn.setImage(#imageLiteral(resourceName: "cardmanage_btn_lost"), for: .normal)
            }
        }
    
        remaindLable.isHidden = true
        iconImage.image = UIImage(named:"card_mannger_\(card.type.rawValue)")
        nameLable.text = card.name
        nameLable.snp.updateConstraints { (make) in
            make.width.equalTo(card.name.computationStringWidth(UIFont.normal, 4, 0).0)
        }
        myindexPath = indexPath
        detailLabel.text = card.introduce
      }
    
      @objc func addDeleteBtnClick(){
        delegete?.addOrDeleteBtnClick(myindexPath)
       }
    
   required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    override func setSelected(_ selected: Bool, animated: Bool) {
        super.setSelected(selected, animated: animated)
    }
    

}
