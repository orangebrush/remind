//
//  GANSolarLunarPicker.swift
//  Remind
//
//  Created by gg on 18/01/2018.
//  Copyright © 2018 ganyi. All rights reserved.
//

import Foundation
class GANSolarLunarPicker: UIView {
    private var solarPicker: GANSolarPicker?
    private var lunarPicker: GANLunarPicker?
    
    ///记录是否含有年份隐藏开关
    private var hasIgnoreYear = false
    
    ///根据是否隐藏年份，返回相应选择器视窗
    private let ignoreHeight: CGFloat = 48
    private var pickerViewFrame: CGRect{
        get{
            if hasIgnoreYear{
                return CGRect(x: 0, y: ignoreHeight, width: bounds.width, height: bounds.height - ignoreHeight)
            }
            return bounds
        }
    }
    
    //MARK:- ----public---------------
    
    ///事件周期
    var isClient = false
    
    ///事件类型
    var eventType = 11
    
    
    ///判断初始是否为农历
    var isLunar = false
    
    ///切换公历农历
    var switchLunar = false{
        didSet{
            solarPicker?.isShow = !switchLunar
            lunarPicker?.isShow = switchLunar
        }
    }
    
    
    
    //MARK:- init--------------------------------------------------------------------------------------
    init(frame: CGRect, withHasIgnoreYear hasIgnoreYear: Bool) {
        super.init(frame: frame)
        self.hasIgnoreYear = hasIgnoreYear
        
        config()
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    override func didMoveToSuperview() {
        super.didMoveToSuperview()
        
        createContents()
    }
    
    
    private func config(){
        
    }
    
    private func createContents(){
        
        if hasIgnoreYear {
            //覆盖顶层视图的分割线，+2
            let ignoreHeaderFrame = CGRect(x: 0, y: -2, width: bounds.width, height: ignoreHeight + 2)
            let ignoreHeader = GANIgnoreHeader(frame: ignoreHeaderFrame)
            addSubview(ignoreHeader)
            
            ignoreHeader.closure = {
                isOn in
                self.solarPicker?.isIgnoreYear = !isOn
                self.lunarPicker?.isIgnoreYear = !isOn
            }
        }
        
        solarPicker = GANSolarPicker(frame: pickerViewFrame)
        solarPicker?.selectedClosure = {
            selectedDate in
        }
        addSubview(solarPicker!)
        
        lunarPicker = GANLunarPicker(frame: pickerViewFrame)
        lunarPicker?.selectedClosure = {
            lunarDate in
        }
        addSubview(lunarPicker!)
        
        //初始化显示农历选择器
        let temp = switchLunar
        switchLunar = temp
    }
}
