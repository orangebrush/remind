//
//  noticeTableViewCell.swift
//  Remind
//
//  Created by zxd on 2017/12/25.
//  Copyright © 2017年 ganyi. All rights reserved.
//

import UIKit
protocol  noticeTableViewCellDelegate:class {
    func buttonClick(_ row:Int)
    func cellClick(_ row:Int)
    func solveButtonClick(_ row:Int)
}
class noticeTableViewCell: UITableViewCell {

    fileprivate lazy var iconImage : UIImageView = {
       let img = UIImageView.init()
       return img
    }()
    fileprivate lazy var timeLable : UILabel = {
        let label = UILabel.init()
        label.textColor = UIColor.white
        label.textAlignment = .center
        label.backgroundColor = UIColor.white.withAlphaComponent(0.1)
        label.layer.cornerRadius = 4
        label.clipsToBounds = true
        label.font = UIFont.content
        return label
    }()
    fileprivate lazy var typeLable : UILabel = {
        let label = UILabel.init()
        label.textColor = UIColor.subSubWord
        label.font = UIFont.content
        return label
    }()
    fileprivate lazy var lable1 : UILabel = {
       let label = UILabel.init()
        label.textColor = UIColor.word
        label.font = UIFont.normal
        return label
    }()
    fileprivate lazy var lable2 : UILabel = {
        let label = UILabel.init()
        label.textColor = UIColor(colorHex:0xff9e1f)
        label.font = UIFont.content
        return label
    }()
    fileprivate lazy var lable3 : UILabel = {
        let label = UILabel.init()
        label.textColor = UIColor.subSubWord
        label.font = UIFont.content
        return label
    }()
    fileprivate lazy var lable4 : UILabel = {
        let label = UILabel.init()
        label.textColor = UIColor.subSubWord
        label.font = UIFont.content
        return label
    }()
    fileprivate lazy var edtingBtn : UIButton = {
         let btn = UIButton.init(type: .custom)
         btn.setImage(#imageLiteral(resourceName: "card_icon_more"), for: .normal)
        btn.addTarget(self, action: #selector(noticeTableViewCell.buttonClick), for: .touchUpInside)
        return btn
    }()
    
   fileprivate lazy var backView : UIView = {
        let view = UIView.init()
        view.backgroundColor = UIColor.header
        return view
    }()
    fileprivate lazy var mainBackView : UIView = {
        let view = UIView.init()
        view.backgroundColor = UIColor.white
        return view
    }()
    fileprivate lazy var sovelButton : UIButton = {
        let button = UIButton.init(type: .custom)
        button.setTitle("标记为已办理", for: .normal)
        button.addTarget(self, action: #selector(noticeTableViewCell.selectButtonClick), for: .touchUpInside)
        button.setTitleColor(UIColor.subWord, for: .normal)
        button.titleLabel?.font = UIFont.init(withNormalFontSize: 15)
        button.backgroundColor = UIColor.header
        return button
    }()
    weak var delegate : noticeTableViewCellDelegate?
    var indexRow = 0
    var cellRow = 0
    override init(style: UITableViewCellStyle, reuseIdentifier: String?) {
        super.init(style: style, reuseIdentifier: reuseIdentifier)
        
        self.backgroundColor = UIColor.clear
        self.selectionStyle = .none
        self.clipsToBounds = false
        self.addSubview(timeLable)
        backView.frame = CGRect.init(x: 10, y: 10, width: keyDeviceWidth-20, height: 146)
        self.addSubview(backView)
        mainBackView.frame = CGRect.init(x: 10, y: 46, width: keyDeviceWidth-20, height: 110)
        self.addSubview(mainBackView)
        backView.addSubview(typeLable)
        backView.addSubview(edtingBtn)
        mainBackView.addSubview(iconImage)
        mainBackView.addSubview(lable1)
        mainBackView.addSubview(lable2)
        mainBackView.addSubview(lable3)
        mainBackView.addSubview(lable4)
        
        
        
        let tap = UITapGestureRecognizer.init(target: self, action: #selector(noticeTableViewCell.cellClick))
        mainBackView.addGestureRecognizer(tap)
    
        timeLable.snp.makeConstraints { (make) in
            make.centerX.equalToSuperview()
            make.width.equalTo(130)
            make.height.equalTo(24)
            make.top.equalTo(15)
        }
        
        typeLable.snp.makeConstraints { (make) in
            make.left.equalTo(15)
            make.right.equalTo(-60)
            make.top.equalTo(0)
            make.height.equalTo(36)
        }
        edtingBtn.snp.makeConstraints { (make) in
            make.width.height.equalTo(30)
            make.top.equalTo(3)
            make.right.equalTo(-6.5)
        }
        iconImage.snp.makeConstraints { (make) in
            make.left.equalTo(15)
            make.width.height.equalTo(34)
            make.top.equalTo(15)
        }
    
        lable1.snp.makeConstraints { (make) in
            make.left.equalTo(iconImage.snp.right).offset(12)
            make.right.equalTo(-15)
            make.top.equalTo(12)
            make.height.equalTo(21)
        }
        lable2.snp.makeConstraints { (make) in
            make.top.equalTo(lable1.snp.bottom)
            make.width.left.equalTo(lable1)
            make.height.equalTo(19)
        }
        lable3.snp.makeConstraints { (make) in
            make.left.width.equalTo(lable1)
            make.height.equalTo(17)
            make.top.equalTo(lable2.snp.bottom).offset(6)
            
        }
        lable4.snp.makeConstraints { (make) in
            make.left.width.equalTo(lable1)
            make.height.equalTo(14)
            make.top.equalTo(lable3.snp.bottom)
        }
//        sovelButton.snp.makeConstraints { (make) in
//            make.bottom.equalTo(0)
//            make.height.equalTo(40)
//            make.left.equalTo(10)
//            make.right.equalTo(-10)
//        }
        sovelButton.frame = CGRect.init(x: 10, y: 146, width: keyDeviceWidth-20, height: 40)
        self.addSubview(sovelButton)
        sovelButton.drawDownCorner()
    }
    @objc func selectButtonClick(){
        delegate?.solveButtonClick(indexRow)
    }
    
    @objc func buttonClick(){
        delegate?.buttonClick(indexRow)
    }
    @objc func cellClick(){
        self.delegate?.cellClick(indexRow)
    }
    func configView(_ notice:Notice,_ showTime:Bool,_ row:Int){
        if showTime{
            self.backView.frame.origin.y = 49
            self.mainBackView.frame.origin.y = 85
            self.sovelButton.frame.origin.y = self.backView.frame.size.height + self.backView.frame.origin.y
            timeLable.text = notice.time ?? ""
            timeLable.isHidden = false
        }else{
            self.backView.frame.origin.y = 10
            self.mainBackView.frame.origin.y = 46
            self.sovelButton.frame.origin.y = self.backView.frame.size.height + self.backView.frame.origin.y
            timeLable.isHidden = true
        }
        typeLable.text = notice.typeName
        indexRow = row
        iconImage.image = UIImage(named:"event_\(notice.type)")
        lable1.text = notice.text1
        lable2.text = notice.text4
        lable3.text = "事件日期：\(notice.text3 ?? "")"
        lable4.text = "提醒时间：\((notice.eventTime ?? Date()).formatString(with: "H:mm"))"
        if notice.isBeginning{
            lable2.textColor = UIColor.remindOringe
        }else{
            lable2.textColor = UIColor.remindRed
        }
        if notice.isOperated{
            sovelButton.isHidden = false
            mainBackView.drawTopRectView()
            backView.drawTopRectView()
        }else{
            sovelButton.isHidden = true
            mainBackView.drawFourRectView()
            backView.drawFourRectView()
        }
        
    }
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    override func setSelected(_ selected: Bool, animated: Bool) {
        super.setSelected(selected, animated: animated)

        // Configure the view for the selected state
    }

}
