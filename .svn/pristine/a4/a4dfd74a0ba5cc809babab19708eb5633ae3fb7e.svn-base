//
//  GANAlertController.swift
//  Remind
//
//  Created by gg on 03/01/2018.
//  Copyright © 2018 ganyi. All rights reserved.
//

import Foundation
class GANAlertController: UIViewController {
    private let alertWidth: CGFloat = 300
    private var alertHeight: CGFloat = 0
    private var minSubAlertHeight: CGFloat = 100
    private let buttonHeight: CGFloat = 48
    private let minHoriEdge: CGFloat = 30
    private let minVertEdge: CGFloat = 27
    
    
    private var titleString = ""
    
    ///弹窗视图
    private var alert: UIView?
    
    var closure: ((Bool)->())?
    
    init(withTitle title: String) {
        super.init(nibName: nil, bundle: nil)
        titleString = title
        
        config()
        createContents()
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    private func config(){
        view.backgroundColor = UIColor(colorHex: 0x000000).withAlphaComponent(0.5)
    }
    
    private func createContents(){
        
        let text = titleString
        let size = CGSize(width: alertWidth - minHoriEdge * 2, height: view_size.height)
        let rect = NSString(string: text).boundingRect(with: size, options: NSStringDrawingOptions.usesLineFragmentOrigin, attributes: [NSAttributedStringKey.font: UIFont.init(withNormalFontSize: 15)], context: nil)
        
        let labelHeight = rect.height < (minSubAlertHeight - minVertEdge * 2) ? (minSubAlertHeight - minVertEdge * 2) : rect.height
        alertHeight = minVertEdge * 2 + labelHeight + buttonHeight
        
        //主背景
        let alertFrame = CGRect(x: (view.bounds.width - alertWidth) / 2, y: (view.bounds.height - alertHeight) / 2, width: alertWidth, height: alertHeight)
        alert = UIView(frame: alertFrame)
        alert?.backgroundColor = UIColor.white.withAlphaComponent(0.9)
        alert?.layer.cornerRadius = .cornerRadius
        view.addSubview(alert!)
        
        //子背景
        let subAlertFrame = CGRect(x: 0, y: 0, width: alertWidth, height: alertHeight - buttonHeight)
        let subAlert = UIView(frame: subAlertFrame)
        subAlert.backgroundColor = .white
        subAlert.layer.cornerRadius = .cornerRadius
        alert?.addSubview(subAlert)
        
        //添加文字
        let labelFrame = CGRect(x: minHoriEdge, y: minVertEdge, width: alertWidth - minHoriEdge * 2, height: labelHeight)
        let label = UILabel(frame: labelFrame)
        label.textAlignment = .center
        label.numberOfLines = 0
        label.text = text
        label.font = UIFont(withNormalFontSize: 15)
        label.textColor = UIColor(colorHex: 0x333333)
        subAlert.addSubview(label)
        
        //取消按钮
        let cancelFrame = CGRect(x: 0, y: alertHeight - buttonHeight, width: alertWidth / 2, height: buttonHeight)
        let cancelButton = UIButton(frame: cancelFrame)
        cancelButton.setTitle("取消", for: .normal)
        cancelButton.setTitleColor(UIColor.init(colorHex: 0x666666), for: .normal)
        cancelButton.titleLabel?.font = UIFont(withNormalFontSize: 15)
        cancelButton.tag = 0
        cancelButton.addTarget(self, action: #selector(click(_:)), for: .touchUpInside)
        alert?.addSubview(cancelButton)
        
        //确认按钮
        let confirmFrame = CGRect(x: alertWidth / 2, y: alertHeight - buttonHeight, width: alertWidth / 2, height: buttonHeight)
        let confirmButton = UIButton(frame: confirmFrame)
        confirmButton.setTitle("确定", for: .normal)
        confirmButton.setTitleColor(UIColor.init(colorHex: 0xff8000), for: .normal)
        confirmButton.titleLabel?.font = UIFont(withSemiboldFontSize: 15)
        confirmButton.tag = 1
        confirmButton.addTarget(self, action: #selector(click(_:)), for: .touchUpInside)
        alert?.addSubview(confirmButton)
        
        //sep
        let sepFrame = CGRect(x: alertWidth / 2, y: subAlertFrame.height + (buttonHeight - 24) / 2, width: 1, height: 24)
        let sep = UIView(frame: sepFrame)
        sep.backgroundColor = UIColor(colorHex: 0x666666).withAlphaComponent(0.1)
        alert?.addSubview(sep)
    }
    
    @objc func click(_ sender: UIButton){
        closure?(sender.tag == 1)
        
        willMove(toParentViewController: nil)
        view.removeFromSuperview()
        removeFromParentViewController()
        //self.dismiss(animated: true, completion: nil)
    }
}

