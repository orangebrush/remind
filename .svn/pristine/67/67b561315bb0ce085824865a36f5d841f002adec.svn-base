//
//  CustomViewController.swift
//  Remind
//
//  Created by zxd on 2017/12/5.
//  Copyright © 2017年 ganyi. All rights reserved.
//

import UIKit

class CustomViewController: UITabBarController,UITabBarControllerDelegate {
    var selectIndex = 0
    
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.delegate = self
        
        var vcArr = self.viewControllers
        let myVC = Me_RootViewController()
        vcArr?.append(UINavigationController.init(rootViewController: myVC))
//        vcArr?.append(UIStoryboard(name: "Profile", bundle: Bundle.main).instantiateInitialViewController()!)
        self.viewControllers = vcArr
        let item1 = UITabBarItem.init(title: "首页", image: #imageLiteral(resourceName: "tabbar_icon_cards").withRenderingMode(.alwaysOriginal), selectedImage: #imageLiteral(resourceName: "tabbar_icon_cards_std").withRenderingMode(.alwaysOriginal))
        item1.tag = 0
        let item2 = UITabBarItem.init(title: "提醒", image: #imageLiteral(resourceName: "tabbar_icon_reminds").withRenderingMode(.alwaysOriginal), selectedImage: #imageLiteral(resourceName: "tabbar_icon_add").withRenderingMode(.alwaysOriginal))
        item2.tag = 1
        let item3 = UITabBarItem.init(title: "我", image: #imageLiteral(resourceName: "tabbar_icon_me").withRenderingMode(.alwaysOriginal), selectedImage: #imageLiteral(resourceName: "tabbar_icon_me_std").withRenderingMode(.alwaysOriginal))
        item3.tag = 2

        viewControllers![0].tabBarItem = item1
        viewControllers![1].tabBarItem = item2
        viewControllers![2].tabBarItem = item3
        
        item1.titlePositionAdjustment = UIOffsetMake(0, -3)
        item1.imageInsets = UIEdgeInsetsMake(-2, 0, 2, 0)
        item2.titlePositionAdjustment = UIOffsetMake(0, -3)
        item2.imageInsets = UIEdgeInsetsMake(-2, 0, 2, 0)
        item3.titlePositionAdjustment = UIOffsetMake(0, -3)
        item3.imageInsets = UIEdgeInsetsMake(-2, 0, 2, 0)
        
        
//        let longPressViewFrame = CGRect(x: view_size.width / 3, y: 0, width: view_size.width / 3, height: view.bounds.height)
//        let longPressView = UIView(frame: longPressViewFrame)
//        longPressView.backgroundColor = .clear
//        view.addSubview(longPressView)
//
//        let longPress = UILongPressGestureRecognizer(target: self, action: #selector(longPressToEditEvent(_:)))
//        longPressView.addGestureRecognizer(longPress)
    }
    
    @objc func tapToNextResponds(_ sender: UITapGestureRecognizer){
        
    }
    
    @objc func longPressToEditEvent(_ sender: UILongPressGestureRecognizer){
        print("long press")
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
    }
    
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)                
    }
    
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        
    }
}

extension CustomViewController{
    override func tabBar(_ tabBar: UITabBar, didSelect item: UITabBarItem) {

        
        if self.selectIndex == 1&&item.tag == 1{
            
            selectIndex = item.tag
            
            if let vc = UIStoryboard(name: "EventHome", bundle: Bundle.main).instantiateInitialViewController() {
                (self.viewControllers![item.tag] as! UINavigationController).show(vc, sender: nil)
                
                
            }
        }else{
            selectIndex = item.tag
        }
        
        if item.tag == 1{
            item.title = ""
            item.imageInsets = UIEdgeInsetsMake(6, 0, -6, 0)
            
        }else{
            for smallItem in (self.tabBar.items)!{
                
                if smallItem.tag == 1{
                    smallItem.title = "提醒"
                    smallItem.imageInsets = UIEdgeInsetsMake(-2, 0, 2, 0)
                }
            }
        }
        
        var index:NSInteger?
        index = self.tabBar.items?.index(of: item)
        animationWithIndex(index!)
        
    }
    func animationWithIndex(_ index :NSInteger){
        
        var tabbarbuttonArray : Array<UIView?> = []
        for tabBarButton in (self.tabBar.subviews) {
            if tabBarButton.isKind(of: NSClassFromString("UITabBarButton")!){
                tabbarbuttonArray.append(tabBarButton)
            }
        }
        if tabbarbuttonArray.count == 3 {
            if Float((tabbarbuttonArray[2]?.frame.origin.x)!) <  Float((tabbarbuttonArray[1]?.frame.origin.x)!) {
                tabbarbuttonArray.swapAt(1, 2)
            }
        }
        let pulse = CABasicAnimation.init(keyPath: "transform.scale")
        pulse.timingFunction = CAMediaTimingFunction.init(name: kCAMediaTimingFunctionEaseInEaseOut)
        pulse.duration = 0.12;
//        pulse.repeatCount = 1;
//        pulse.autoreverses = true;
        pulse.fromValue = NSNumber.init(value: 0.6)
        pulse.toValue = NSNumber.init(value: 1)
        tabbarbuttonArray[index]?.layer.add(pulse,forKey:nil)
    }
    //MARK:- 解决两次点击同一个icon 导航栏pop到首页
    func tabBarController(_ tabBarController: UITabBarController, shouldSelect viewController: UIViewController) -> Bool {
        
        let navVC = tabBarController.selectedViewController
        if (navVC?.isEqual(viewController))!{
            return false
        }
        return true
    }
    
    
    
    
}
