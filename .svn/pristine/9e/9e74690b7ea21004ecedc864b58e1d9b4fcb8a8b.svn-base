//
//  PhonePasswordLoginViewController.swift
//  Remind
//
//  Created by dong on 2018/1/8.
//  Copyright © 2018年 ganyi. All rights reserved.
//

import UIKit

class PhonePasswordLoginViewController: BaseLoginViewController, LoginViewControllerDelegate {
    fileprivate lazy var loginRegisterView: LoginRegisterView = {
        let loginRegisterView = LoginRegisterView(title: "欢迎登录米橙", type: .big, { (view) in
            view.addTextField { (textField) in
                textField.placeholder = "手机号"
                textField.setRightViewType(type: .phone)
            }
            view.addTextField { (textField) in
                textField.placeholder = "密码"
                textField.setRightViewType(type: .password)
                textField.returnKeyType = .done
                textField.range = 6...32
            }
        })
        loginRegisterView.button.setTitle("登录", for: .normal)
        loginRegisterView.button.addTarget(self, action: #selector(login), for: .touchUpInside)
        return loginRegisterView
    }()
    
    fileprivate let userInfo: WechatUserInfo? = nil
//    init(userInfo: WechatUserInfo) {
//        self.userInfo = userInfo
//        super.init(nibName: nil, bundle: nil)
//    }
    
//    required init?(coder aDecoder: NSCoder) {
//        fatalError("init(coder:) has not been implemented")
//    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        view.addSubview(loginRegisterView)
        loginRegisterView.snp.makeConstraints { (make) in
            make.edges.equalToSuperview()
        }

        // Do any additional setup after loading the view.
    }

}

extension PhonePasswordLoginViewController {
    
    @objc fileprivate func login() {
        let phoneNumber = loginRegisterView.text
        let password = loginRegisterView.text2
        
        let successHandler: (LoginInfo) -> Void = { loginInfo in
//            self.loginSuccess(loginInfo: loginInfo, type: .wechatBind(self.userInfo)!)
        }
        
        view.endEditing(true)
//        MSGToast.show("登录中", isloading: true, inView: view)
//        LoginService.phoneNumberLogin(phoneNumber: phoneNumber, password: password, wechatId: userInfo.openid, nickname: userInfo.nickname, headface: userInfo.headImageUrl, successHandler: successHandler) { (code, isVerify, error) in
//            MSGToast.cancel()
//
//            guard code != 100 else {
//                let alertView = MemberAlertView(message: "你的帐户已绑定其他微信号")
//                alertView.addAction(title: "确定")
//                alertView.show()
//                return
//            }
//
//            if isVerify {
//                LoginCodeView.show(username: phoneNumber, source: .phone, { (loginCodeView, code) in
//                    MSGToast.show("登录中", isloading: true, inView: loginCodeView.superview!)
//                    LoginService.phoneNumberLogin(phoneNumber: phoneNumber, password: password, code: code, wechatId: self.userInfo.openid, nickname: self.userInfo.nickname, headface: self.userInfo.headImageUrl, successHandler: { (loginInfo) in
//                        loginCodeView.dismiss()
//                        successHandler(loginInfo)
//                    }, errorHandler: { (code, _, error) in
//                        if code == MemberServiceErrorCode.codeError.rawValue {
//                            loginCodeView.refreshLoginCode()
//                            MSGToast.show(error.errorMessage, inView: loginCodeView.superview!)
//                        } else {
//                            loginCodeView.dismiss()
//                            MSGToast.show(error.errorMessage, inView: self.view)
//                        }
//                    })
//                })
//            } else {
//                MSGToast.show(error.errorMessage, inView: self.view)
//            }
//        }
    }
    
}

