//
//  EventTableViewCell.swift
//  Remind
//
//  Created by zxd on 2017/12/6.
//  Copyright © 2017年 ganyi. All rights reserved.
//

import UIKit

class EventTableViewCell: UITableViewCell {
    fileprivate lazy var iconImageView = UIImageView()
    fileprivate lazy var nameLable : UILabel = {
        let lable = UILabel.init()
        lable.font =  UIFont.normal
        lable.textColor = UIColor.word
        return lable
    }()
    fileprivate lazy var timeLabel: UILabel = {
        let lable = UILabel.init()
        lable.font = UIFont.content
        lable.textColor = UIColor.subSubWord
        return lable
    }()

    fileprivate lazy var rightLabel : UILabel = {
        let lable = UILabel.init()
        lable.font = UIFont.init(withNormalFontSize: 13)
        lable.textColor = UIColor.word
        lable.textAlignment = .right
        return lable
    }()
    fileprivate lazy var cutLable : UILabel = {
        let lable = UILabel.init()
        lable.backgroundColor = UIColor.separator
        return lable
    }()
    fileprivate lazy var mainBackView:UIView = {
        let view = UIView.init()
        view.backgroundColor = UIColor.white
        return view
    }()
    fileprivate lazy var BackView:UIView = {
        let view = UIView.init()
        view.backgroundColor = UIColor.header
        return view
    }()
    override init(style: UITableViewCellStyle, reuseIdentifier: String?) {
        super.init(style: style, reuseIdentifier: reuseIdentifier)
        self.backgroundColor = UIColor.clear
        self.selectionStyle = .none
        BackView.frame = CGRect.init(x: 10, y: 0, width: keyDeviceWidth-20, height:64)
        self.addSubview(BackView)
        mainBackView.frame = CGRect.init(x: 10, y: 0, width: keyDeviceWidth-20, height:64)
        self.addSubview(mainBackView)
        mainBackView.addSubview(iconImageView)
        mainBackView.addSubview(nameLable)
        mainBackView.addSubview(timeLabel)
        mainBackView.addSubview(rightLabel)
        mainBackView.addSubview(cutLable)
        iconImageView.snp.makeConstraints { (make) in
            make.left.equalTo(15)
            make.centerY.equalToSuperview()
            make.width.height.equalTo(34)
        }
        nameLable.snp.makeConstraints { (make) in
            make.top.equalTo(12)
            make.left.equalTo(iconImageView.snp.right).offset(15)
            make.height.equalTo(21)
            make.right.equalTo(rightLabel.snp.left).offset(-5)
        }
        timeLabel.snp.makeConstraints { (make) in
            make.top.equalTo(nameLable.snp.bottom)
            make.left.equalTo(nameLable)
            make.height.equalTo(19)
            make.right.equalTo(-15)
        }

        rightLabel.snp.makeConstraints { (make) in
            make.width.equalTo(80)
            make.centerY.height.equalTo(nameLable)
            make.right.equalTo(-15)
        }
        cutLable.snp.makeConstraints { (make) in
            make.left.equalTo(iconImageView)
            make.right.equalTo(0)
            make.bottom.equalToSuperview()
            make.height.equalTo(1)
        }
    }
    func configCell(_ eventModel:EventModel?,_ brithday:BirthdayModel?, _ event : EventDB? ,_ isneedClip:Bool,_ isfrist:Bool){
        mainBackView.resetNomalView()
        BackView.resetNomalView()
        if isfrist {
            mainBackView.drawTopRectView()
            if isneedClip{
                mainBackView.drawFourRectView()
                BackView.drawRectView()
                cutLable.isHidden = true
            }else{
                cutLable.isHidden = false
            }
        }else{
            if isneedClip{
                mainBackView.drawRectView()
                BackView.drawRectView()
                cutLable.isHidden = true
            }else{
                cutLable.isHidden = false
            }
        }
        if (eventModel != nil) {
            
            iconImageView.image = UIImage(named:"event_\(eventModel!.type)")
            nameLable.text = eventModel?.introduce
            timeLabel.text = (eventModel?.formalTimeText)!
            rightLabel.text = eventModel!.intervalDay.intervalDayText()
        }else if (brithday != nil){
            
            iconImageView.image = UIImage(named:"event_\(brithday!.type)")
            nameLable.text = brithday?.introduce
            timeLabel.text = (brithday?.content)!
            rightLabel.text = brithday?.intervalDay.intervalDayText() ?? ""
        }else{
            iconImageView.image = UIImage(named:"event_\(event!.type)")
            nameLable.text = event?.introduce
            timeLabel.text = (event!.content ?? "")
            rightLabel.text = event?.intervalDay.intervalDayText()
            if event?.status == 1 || event?.status == 2{
                iconImageView.alpha = 0.4
                nameLable.textColor = UIColor.grayBtn
                timeLabel.textColor = UIColor.grayBtn
                rightLabel.textColor = UIColor.grayBtn
                rightLabel.text = event!.status == 1 ? "已关闭" : "已结束"
            }else{
                nameLable.textColor = UIColor.word
                timeLabel.textColor = UIColor.subSubWord
                rightLabel.textColor = UIColor.word
                iconImageView.alpha = 1
            }
        }
        
        
        
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    override func setSelected(_ selected: Bool, animated: Bool) {
        super.setSelected(selected, animated: animated)
        
        
    }
    
}

