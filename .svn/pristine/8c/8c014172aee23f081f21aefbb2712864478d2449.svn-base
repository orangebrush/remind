//
//  homeEdtingTableViewCell.swift
//  Remind
//
//  Created by zxd on 2017/12/22.
//  Copyright © 2017年 ganyi. All rights reserved.
//

import UIKit
protocol homeEdtingCellDelegate : class {
    func cellClick(_ section : Int ,_ row : Int)
}
class homeEdtingTableViewCell: UITableViewCell {
    weak var delegate : homeEdtingCellDelegate?
    var eventImageArr = [UIImage]()
    var eventText = [String]()
    var section = 0
    var islocal = false
    fileprivate lazy var imageview : UIImageView = {
        let img = UIImageView.init()
        return img
    }()
    fileprivate lazy var textlabel : UILabel = {
        let label = UILabel.init()
        label.textColor = UIColor.nodata
        label.font = UIFont.normal
        return label
    }()
    fileprivate lazy var cutlabel : UILabel = {
        let label = UILabel.init()
        label.backgroundColor = UIColor.edtingSeparator
        return label
    }()
    fileprivate lazy var backView : UIView = {
        let view = UIView.init()
        view.backgroundColor = UIColor.white.withAlphaComponent(0.9)
        return view
    }()
    fileprivate lazy var imageview1 : UIImageView = {
        let img = UIImageView.init()
        return img
    }()
    fileprivate lazy var textlabel1 : UILabel = {
        let label = UILabel.init()
        label.textColor = UIColor.nodata
        label.font = UIFont.normal
        return label
    }()
    fileprivate lazy var cutlabel1 : UILabel = {
        let label = UILabel.init()
        label.backgroundColor = UIColor.edtingSeparator
        return label
    }()
    fileprivate lazy var imageview2 : UIImageView = {
        let img = UIImageView.init()
        return img
    }()
    fileprivate lazy var textlabel2 : UILabel = {
        let label = UILabel.init()
        label.textColor = UIColor.nodata
        label.font = UIFont.normal
        return label
    }()
    fileprivate lazy var deltailimageview1 : UIImageView = {
        let img = UIImageView.init()
        img.image = #imageLiteral(resourceName: "card_icon_rightarrow")
        return img
    }()
    fileprivate lazy var deltailimageview2 : UIImageView = {
        let img = UIImageView.init()
         img.image = #imageLiteral(resourceName: "card_icon_rightarrow")
        return img
    }()
    fileprivate lazy var deltailimageview3 : UIImageView = {
        let img = UIImageView.init()
         img.image = #imageLiteral(resourceName: "card_icon_rightarrow")
        return img
    }()
    fileprivate lazy var btn : UIButton = {
        let button = UIButton.init(type: .custom)
        button.addTarget(self, action: #selector(EventedtingTableViewCell.buttonClick(_:)), for: .touchUpInside)
        button.tag = 0
        return button
    }()
    fileprivate lazy var btn1 : UIButton = {
        let button = UIButton.init(type: .custom)
        button.addTarget(self, action: #selector(EventedtingTableViewCell.buttonClick(_:)), for: .touchUpInside)
        button.tag = 1
        return button
    }()
    fileprivate lazy var btn2 : UIButton = {
        let button = UIButton.init(type: .custom)
        button.addTarget(self, action: #selector(EventedtingTableViewCell.buttonClick(_:)), for: .touchUpInside)
        button.tag = 2
        return button
    }()
    override init(style: UITableViewCellStyle, reuseIdentifier: String?) {
        super.init(style: style, reuseIdentifier: reuseIdentifier)
        self.backgroundColor = UIColor.clear
        self.selectionStyle = .none
        self.clipsToBounds = true
        backView.frame = CGRect.init(x: 10, y: 0, width: keyDeviceWidth-20, height: 120)
       
        self.addSubview(backView)
        backView.addSubview(imageview)
        backView.addSubview(textlabel)
        backView.addSubview(cutlabel)
        backView.addSubview(imageview1)
        backView.addSubview(textlabel1)
        backView.addSubview(cutlabel1)
        backView.addSubview(imageview2)
        backView.addSubview(textlabel2)
        backView.addSubview(deltailimageview1)
        backView.addSubview(deltailimageview2)
        backView.addSubview(deltailimageview3)
        backView.addSubview(btn)
        backView.addSubview(btn1)
        backView.addSubview(btn2)
        
    }
    func configView(_ indexPath:IndexPath,_ card:Card){
        self.section = indexPath.section
        
        switch card.type! {
        case .weather(_, _):
            self.eventImageArr = [#imageLiteral(resourceName: "card_icon_whole"),#imageLiteral(resourceName: "card_icon_citymanage"),#imageLiteral(resourceName: "card_icon_setup")]
            self.eventText = ["查看全部","城市管理","卡片设置"]
            break
        case .birthday(_, _):
            self.eventImageArr = [#imageLiteral(resourceName: "card_icon_whole"),#imageLiteral(resourceName: "card_icon_citymanage"),#imageLiteral(resourceName: "card_icon_setup")]
            self.eventText = ["查看全部","添加生日","卡片设置"]
            break
        case .event(_, _):
            self.eventImageArr = [#imageLiteral(resourceName: "card_icon_whole"),#imageLiteral(resourceName: "card_icon_citymanage"),#imageLiteral(resourceName: "card_icon_setup")]
            self.eventText = ["查看全部","添加重要事件","卡片设置"]
            break
        case .stock(_, _):
            self.eventImageArr = [#imageLiteral(resourceName: "card_icon_whole"),#imageLiteral(resourceName: "card_icon_citymanage"),#imageLiteral(resourceName: "card_icon_setup")]
            self.eventText = ["查看全部","添加股票","卡片设置"]
            break
        case .festival(_, _):
            self.eventImageArr = [#imageLiteral(resourceName: "card_icon_whole"),#imageLiteral(resourceName: "card_icon_setup")]
            self.eventText = ["查看全部","卡片设置"]
            break
        case .step(_, _):
            self.eventImageArr = [#imageLiteral(resourceName: "card_icon_whole")]
            self.eventText = ["查看详情"]
            break
        case .eventClient(_, _):
            self.eventImageArr = [#imageLiteral(resourceName: "card_icon_whole"),#imageLiteral(resourceName: "card_icon_citymanage")]
            self.eventText = ["查看全部","添加每日提醒"]
            break
        case .holiday(_, _):
            self.eventImageArr = [#imageLiteral(resourceName: "card_icon_whole"),#imageLiteral(resourceName: "card_icon_citymanage"),#imageLiteral(resourceName: "card_icon_setup")]
            self.eventText = ["查看全部","添加重要事件","卡片设置"]
            break
        }
     
        
        
        let image =  eventImageArr[0]
        let image1 = eventImageArr.count>=2 ? eventImageArr[1] : eventImageArr[0]
        let image2 = eventImageArr.count>=3 ? eventImageArr[2] : eventImageArr[0]
        
        imageview.snp.makeConstraints { (make) in
            make.left.equalTo(20)
            make.centerY.equalTo(textlabel.snp.centerY)
            make.width.equalTo(image.size.width)
            make.height.equalTo(image.size.height)
        }
        imageview1.snp.makeConstraints { (make) in
            make.left.equalTo(20)
            make.centerY.equalTo(textlabel1.snp.centerY)
            make.width.equalTo(image1.size.width)
            make.height.equalTo(image1.size.height)
        }
        imageview2.snp.makeConstraints { (make) in
            make.left.equalTo(20)
            make.centerY.equalTo(textlabel2.snp.centerY)
            make.width.equalTo(image2.size.width)
            make.height.equalTo(image2.size.height)
        }
        imageview.image = image
        imageview1.image = image1
        imageview2.image = image2
        textlabel.text = eventText[0]
        textlabel1.text = eventImageArr.count>=2 ? eventText[1] : eventText[0]
        textlabel2.text = eventImageArr.count>=3 ? eventText[2] : eventText[0]
        textlabel.snp.makeConstraints { (make) in
            make.left.equalTo(45)
            make.top.equalTo(0)
            make.bottom.equalTo(cutlabel.snp.top)
            make.width.equalTo(200)
        }
        cutlabel.snp.makeConstraints { (make) in
            make.left.equalTo(imageview.snp.left)
            make.height.equalTo(0.5)
            make.right.equalTo(0)
            make.bottom.equalTo(textlabel1.snp.top)
        }
        textlabel1.snp.makeConstraints { (make) in
            make.left.width.height.equalTo(textlabel)
            make.bottom.equalTo(cutlabel1.snp.top)
        }
        cutlabel1.snp.makeConstraints { (make) in
            make.left.width.height.equalTo(cutlabel)
            make.bottom.equalTo(textlabel2.snp.top)
        }
        textlabel2.snp.makeConstraints { (make) in
            make.left.width.height.equalTo(textlabel)
            make.bottom.equalTo(0)
        }
        btn.snp.makeConstraints { (make) in
            make.left.top.right.equalTo(0)
            make.bottom.equalTo(btn1.snp.top)
        }
        btn1.snp.makeConstraints { (make) in
            make.left.width.height.equalTo(btn)
            make.bottom.equalTo(btn2.snp.top)
        }
        btn2.snp.makeConstraints { (make) in
            make.left.width.height.equalTo(btn)
            make.bottom.equalTo(0)
        }
        deltailimageview1.snp.makeConstraints { (make) in
            make.width.height.equalTo(15)
            make.centerY.equalTo(textlabel.snp.centerY)
            make.right.equalTo(-15)
        }
        deltailimageview2.snp.makeConstraints { (make) in
            make.width.height.equalTo(15)
            make.centerY.equalTo(textlabel1.snp.centerY)
            make.right.equalTo(-15)
        }
        deltailimageview3.snp.makeConstraints { (make) in
            make.width.height.equalTo(15)
            make.centerY.equalTo(textlabel2.snp.centerY)
            make.right.equalTo(-15)
        }
        
        
    }
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    @objc func buttonClick(_ button:UIButton){
        delegate?.cellClick(self.section, button.tag)
    }
    override func setSelected(_ selected: Bool, animated: Bool) {
        super.setSelected(selected, animated: animated)
        
        // Configure the view for the selected state
    }
}
