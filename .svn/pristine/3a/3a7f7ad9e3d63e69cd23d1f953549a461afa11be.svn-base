//
//  eventHeader.swift
//  Remind
//
//  Created by zxd on 2017/12/14.
//  Copyright © 2017年 ganyi. All rights reserved.
//

import UIKit
protocol eventsectionHeaderDelegate:class  {
    func eventHeaderClick(_ section:Int,_ islocal:Bool)
}
class eventHeader: UIView {
    weak var delegate : eventsectionHeaderDelegate?
    var titleLabel : UILabel = {
        let lable = UILabel()
        lable.font = UIFont.content
        lable.textColor = UIColor.nodata
        return lable
    }()
    var editingBtn : UIButton = {
        let btn = UIButton.init(type: .custom)
        return btn
    }()
    var section : Int!
    var isLocal : Bool!
    override init(frame: CGRect) {
        super.init(frame: frame)
    
        self.backgroundColor = UIColor.header
        self.addSubview(titleLabel)
        self.drawCorner()
        titleLabel.snp.makeConstraints { (make) in
            make.left.equalTo(15)
            make.top.equalTo(5)
            make.bottom.equalTo(-5)
            make.right.equalTo(0)
        }
        
        editingBtn.frame = CGRect.init(x: keyDeviceWidth-20-26-10.5, y: 5, width: 26, height: 26)
        editingBtn.setImage(#imageLiteral(resourceName: "card_icon_more"), for: .normal)
        editingBtn.addTarget(self, action: #selector(eventHeader.buttonClick), for: .touchUpInside)
        self.addSubview(editingBtn)
    }
    func configView(_ section:Int,_ isLocal:Bool,_ event:EventDB?,_ client:EventClient?){
        self.section = section
        self.isLocal = isLocal
        if (event != nil) {
            self.titleLabel.text = event?.typeName ?? ""
        }else{
            self.titleLabel.text = client?.typeName ?? ""
        }
        
    }
    @objc func buttonClick(){
        
        delegate?.eventHeaderClick(section,isLocal)
    }
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
}
