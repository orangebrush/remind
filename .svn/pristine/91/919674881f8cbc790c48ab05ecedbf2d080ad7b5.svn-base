//
//  festivalDetailTableViewCell.swift
//  Remind
//
//  Created by zxd on 2017/12/23.
//  Copyright © 2017年 ganyi. All rights reserved.
//

import UIKit

class festivalDetailTableViewCell: UITableViewCell {

    
  fileprivate lazy  var leftLabel : UILabel = {
        let label = UILabel.init()
        label.font = UIFont.normal
        label.textColor = UIColor.subSubWord
        return label
    }()
    fileprivate lazy var imageView1 : UIImageView = {
        let img = UIImageView.init()
        img.image = #imageLiteral(resourceName: "festival_rest")
        return img
    }()
    fileprivate lazy var imageView2 : UIImageView = {
        let img = UIImageView.init()
        img.image = #imageLiteral(resourceName: "select")
        return img
    }()
    fileprivate lazy var backView : UIView = {
        let view = UIView.init()
        view.backgroundColor = UIColor.white
        return view
    }()
    override init(style: UITableViewCellStyle, reuseIdentifier: String?) {
        super.init(style: style, reuseIdentifier: reuseIdentifier)
        self.backgroundColor = UIColor.clear
        backView.frame = CGRect.init(x: 0, y: 0, width: keyDeviceWidth-20, height: 50)
        self.addSubview(backView)
        backView.addSubview(leftLabel)
        backView.addSubview(imageView1)
        backView.addSubview(imageView2)
        
        leftLabel.snp.makeConstraints { (make) in
            make.left.equalTo(15)
            make.top.bottom.equalTo(0)
            make.width.equalTo(100)
           
        }
        imageView1.snp.makeConstraints { (make) in
            make.width.height.equalTo(23)
            make.centerY.equalToSuperview()
            make.left.equalTo(125)
            
        }
        imageView2.snp.makeConstraints { (make) in
            make.right.equalTo(-16)
            make.height.equalTo(11)
            make.width.equalTo(15)
            make.centerY.equalToSuperview()
            
        }
    }
    //配置view
    func configView(_ model:FestivalModel?,_ indexPath:IndexPath,_ clip : Bool,_ selectAll : Bool?){
        
        backView.resetNomalView()
        if indexPath.row == 0{
            
            backView.drawTopRectView()
            imageView1.isHidden = true
            if selectAll! {
                leftLabel.text = "取消全选"
                imageView2.isHidden = false
            }else{
                leftLabel.text = "全选"
                imageView2.isHidden = true
            }
            
        }else{
            if clip {
                backView.drawRectView()
            }
            var str = ""
            if model?.lunarText == ""{
                str = "\(model?.name ?? "") \(model?.dateText ?? "") \(model?.weekday ?? "")"
            }else{
                str = "\(model?.name ?? "") \(model?.dateText ?? "") \(model?.weekday ?? "") (\(model?.lunarText ?? ""))"
            }
            var common = self.restString(string1: model?.name ?? "", string2: str)
            leftLabel.attributedText = common.1
            if common.0 > keyDeviceWidth - 30 - 23 - 20 - 20 - 15{
                common.0 = keyDeviceWidth - 30 - 23 - 20 - 20 - 15
            }
            leftLabel.snp.updateConstraints({ (make) in
                make.width.equalTo(common.0)
            })
            imageView1.snp.updateConstraints({ (make) in
                make.left.equalTo(common.0+25)
            })
            if (model?.selected)!{
                imageView2.isHidden = false
            }else{
                imageView2.isHidden = true
            }
            if (model?.isRestDay)!{
                imageView1.isHidden = false
            }else{
                imageView1.isHidden = true
            }
        }
        
    }
    func restString(string1:String,string2:String)->(CGFloat,NSMutableAttributedString){
        let attStr = NSMutableAttributedString.init(string: string2)
        attStr.addAttributes([NSAttributedStringKey.foregroundColor:UIColor.word], range: NSRange.init(location: 0, length: string1.count))
         attStr.addAttributes([NSAttributedStringKey.font:UIFont.normal], range: NSRange.init(location: 0, length: string2.count))
      let rect = attStr.boundingRect(with: CGSize.init(width: 1000, height: 50), options: .usesLineFragmentOrigin, context: nil)
       return (rect.size.width+2,attStr)
    }
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    override func setSelected(_ selected: Bool, animated: Bool) {
        super.setSelected(selected, animated: animated)
        
        
    }

}
