//
//  navView.swift
//  Remind
//
//  Created by zxd on 2017/12/13.
//  Copyright © 2017年 ganyi. All rights reserved.
//

import UIKit
protocol  navHeadClickDelegate:class{
    func navDelegaetClick(_ isClient:Bool)
}
class navView: UIView {
    weak var delegate : navHeadClickDelegate?
    fileprivate lazy var eventLabel : UILabel = {
        let label = UILabel.init()
        label.text = "重要事件"
        label.textColor = UIColor.word
        label.font = UIFont.init(withNormalFontSize: 13)
        label.textAlignment = .center
        return label
    }()
    fileprivate lazy var localLabel : UILabel = {
        let label = UILabel.init()
        label.text = "每日提醒"
        label.textColor = UIColor.subSubWord
        label.font = UIFont.init(withNormalFontSize: 13)
        label.textAlignment = .center
        return label
    }()
    fileprivate lazy var cutLable : UILabel = {
        let label = UILabel.init()
        label.backgroundColor = UIColor.white
        label.layer.cornerRadius = 4
        label.clipsToBounds = true
        return label
    }()
    
    fileprivate lazy var borderView : UIView = {
        let view = UIView()
        view.backgroundColor = UIColor.clear
        view.layer.borderWidth = 1
        view.layer.borderColor = UIColor.subSubWord.cgColor
        view.layer.cornerRadius = 4
        return view
    }()
    override init(frame: CGRect) {
        super.init(frame: frame)
        self.addSubview(borderView)
        self.addSubview(cutLable)
        self.addSubview(eventLabel)
        self.addSubview(localLabel)
        
        
        borderView.snp.makeConstraints { (make) in
            make.left.equalTo(0)
            make.height.equalTo(28)
            make.centerY.equalToSuperview()
            make.width.equalToSuperview()
        }
        
        eventLabel.snp.makeConstraints { (make) in
            make.left.equalTo(0)
            make.height.equalTo(28)
            make.centerY.equalToSuperview()
            make.width.equalTo(80)
        }
        localLabel.snp.makeConstraints { (make) in
            make.right.top.equalTo(0)
            make.height.width.equalTo(eventLabel)
            make.centerY.equalToSuperview()
        }
        cutLable.snp.makeConstraints { (make) in
            make.left.equalTo(0)
            make.height.equalTo(28)
            make.centerY.equalToSuperview()
            make.width.equalTo(eventLabel)
        }
        let tapGesture = UITapGestureRecognizer.init(target: self, action: #selector(navView.tapGesture(_:)))
        let tapGesture1 = UITapGestureRecognizer.init(target: self, action: #selector(navView.tapGesture(_:)))
        eventLabel.isUserInteractionEnabled = true
        localLabel.isUserInteractionEnabled = true
        eventLabel.addGestureRecognizer(tapGesture)
        localLabel.addGestureRecognizer(tapGesture1)
    }
    
    @objc func tapGesture(_ tap:UITapGestureRecognizer){
        
        if (tap.view?.isEqual(eventLabel))!{
            self.delegate?.navDelegaetClick(false)
            UIView.animate(withDuration: 0.3, animations: {
                self.localLabel.textColor = UIColor.subSubWord
                self.eventLabel.textColor = UIColor.word
                self.cutLable.snp.updateConstraints({ (make) in
                    make.left.equalTo(0)
                    
                })
            })
        }else{
            self.delegate?.navDelegaetClick(true)
            UIView.animate(withDuration: 0.3, animations: {
                self.localLabel.textColor = UIColor.word
                self.eventLabel.textColor = UIColor.subSubWord
                self.cutLable.snp.updateConstraints({ (make) in
                    make.left.equalTo(80)
                })
            })
        }
    }
    
    func swipView(_ isLocal:Bool){
        if isLocal{
            UIView.animate(withDuration: 0.3, animations: {
                self.localLabel.textColor = UIColor.word
                self.eventLabel.textColor = UIColor.subSubWord
                self.cutLable.snp.updateConstraints({ (make) in
                    make.left.equalTo(80)
                })
            })
        }else{
            UIView.animate(withDuration: 0.3, animations: {
                self.localLabel.textColor = UIColor.subSubWord
                self.eventLabel.textColor = UIColor.word
                self.cutLable.snp.updateConstraints({ (make) in
                    make.left.equalTo(0)
                    
                })
            })
        }
    }
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
}

