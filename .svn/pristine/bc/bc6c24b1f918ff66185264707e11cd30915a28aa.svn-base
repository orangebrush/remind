//
//  GANTimePicker.swift
//  Remind
//
//  Created by gg on 02/01/2018.
//  Copyright © 2018 ganyi. All rights reserved.
//

import Foundation
class GANTimePicker: UIPickerView {
    
    ///默认选择时分（必须）
    var selectedDate = Date() {
        didSet{
            reloadAllComponents()
            initSelectedDate()
        }
    }
    
    var selectedClosure: ((Date)->())?
    
    
    //private---------------------------------------------------------------------------
    private lazy var componentWidth: CGFloat! = {
        return self.frame.width / 2
    }()
    private let componentHeight: CGFloat = 55
    private lazy var hourLabel: UILabel! = {
        let frame = CGRect(x: componentWidth * 0.58, y: (self.frame.height - componentHeight) / 2 + (17 - 9) / 4, width: 21, height: componentHeight)
        let label = UILabel(frame: frame)
        label.backgroundColor = .clear
        label.font = UIFont(withNormalFontSize: 9)
        label.textColor = UIColor(colorHex: 0x333333)
        label.text = "时"
        return label
    }()
    
    private lazy var minuteLabel: UILabel! = {
        let frame = CGRect(x: componentWidth * 0.58 + componentWidth, y: (self.frame.height - componentHeight) / 2 + (17 - 9) / 4, width: 21, height: componentHeight)
        let label = UILabel(frame: frame)
        label.backgroundColor = .clear
        label.font = UIFont(withNormalFontSize: 9)
        label.textColor = UIColor(colorHex: 0x333333)
        label.text = "分"
        return label
    }()
    
    //MARK:- init----------------------------------------------------------------------------------------------------------------
    override init(frame: CGRect) {
        super.init(frame: frame)
        
        config()
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    override func didMoveToSuperview() {
        super.didMoveToSuperview()
        
        initSelectedDate()
    }
    
    //MARK:- 初始化选择日期
    private func initSelectedDate(){
        
        let components = calendar.dateComponents([.hour, .minute], from: selectedDate)
        guard let hour = components.hour, let minute = components.minute else {
            return
        }
        
        selectRow(hour, inComponent: 0, animated: true)
        selectRow(minute, inComponent: 1, animated: true)
    }
    
    private func config(){
        delegate = self
        dataSource = self
        
        backgroundColor = UIColor.clear
        
        addSubview(hourLabel)
        addSubview(minuteLabel)
        
        
        let hx = bounds.width / 2
        let hFrame = CGRect(x: hx, y: 0, width: 0.5, height: bounds.height)
        let hSep = UIView(frame: hFrame)
        hSep.backgroundColor = UIColor(colorHex: 0xdddddd)
        addSubview(hSep)
        
//        //添加背景白色
//        let backViewFrame = CGRect(x: 0, y: (bounds.height - componentHeight) / 2, width: bounds.width, height: componentHeight)
//        let backView = UIView(frame: backViewFrame)
//        backView.backgroundColor = .white
//        backView.layer.zPosition = -0.1
//        addSubview(backView)
    }
}

extension GANTimePicker: UIPickerViewDelegate, UIPickerViewDataSource{
    func numberOfComponents(in pickerView: UIPickerView) -> Int {
        return 2
    }    
    
    func pickerView(_ pickerView: UIPickerView, numberOfRowsInComponent component: Int) -> Int {
        return component == 0 ? 24 : 60
    }
    
    func pickerView(_ pickerView: UIPickerView, viewForRow row: Int, forComponent component: Int, reusing view: UIView?) -> UIView {
        //主cell
        let pickerLabel0 = pickerView.view(forRow: row, forComponent: component) as? UILabel
        pickerLabel0?.backgroundColor = .clear
        pickerLabel0?.font = UIFont(withSemiboldFontSize: 17)
        
        let text0: String
        switch component {
        case 0:     //小时
            let hour = row
            let hourStr = hour < 10 ? "0\(hour)" : "\(hour)"
            text0 = hourStr
        default:    //分钟
            let minute = row
            let minuteStr = minute < 10 ? "0\(minute)" : "\(minute)"
            text0 = minuteStr
        }
        let attributedString0 = NSMutableAttributedString(string: text0, attributes: [NSAttributedStringKey.foregroundColor : UIColor(colorHex: 0x333333), NSAttributedStringKey.font: UIFont(withNormalFontSize: 17)])
        pickerLabel0?.attributedText = attributedString0
        
        
        //其他小cell
        let frame = CGRect(x: 0, y: 0, width: componentWidth, height: componentHeight)
        let pickerLabel = UILabel(frame: frame)
        pickerLabel.font = UIFont(withNormalFontSize: 17)
        pickerLabel.textColor = UIColor(colorHex: 0x333333)
        
        pickerLabel.backgroundColor = .clear
        pickerLabel.layer.transform = CATransform3DIdentity
        pickerLabel.textAlignment = .center
        
        let attributedString = NSMutableAttributedString(string: text0, attributes: [NSAttributedStringKey.foregroundColor : UIColor(colorHex: 0x333333), NSAttributedStringKey.font: UIFont(withNormalFontSize: 17)])
        pickerLabel.attributedText = attributedString
        return pickerLabel
    }
    
    func pickerView(_ pickerView: UIPickerView, rowHeightForComponent component: Int) -> CGFloat {
        return 55
    }
    
    func pickerView(_ pickerView: UIPickerView, didSelectRow row: Int, inComponent component: Int) {
        
        //选择回调
        let hourRow = pickerView.selectedRow(inComponent: 0)
        let minuteRow = pickerView.selectedRow(inComponent: 1)
        
        if hourRow == 0 && minuteRow == 0 {
            pickerView.selectRow(1, inComponent: 1, animated: true)
            return
        }
        
        let hour = hourRow
        let minute = minuteRow
        
        var components = calendar.dateComponents([.hour, .minute], from: Date())
        components.hour = hour
        components.minute = minute
        guard let selectedDate = calendar.date(from: components) else{
            return
        }
        
        //返回选择事件
        selectedClosure?(selectedDate)
        
        self.selectedDate = selectedDate
    }
}
