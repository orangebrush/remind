//
//  WeatherTableViewCell.swift
//  Remind
//
//  Created by zxd on 2017/12/4.
//  Copyright © 2017年 i4. All rights reserved.
//

import UIKit
import SnapKit
import Kingfisher
protocol WeatherTableViewCellDelegate :class{
    func weatherCellclick(_ model:WeatherModel)
}
class WeatherTableViewCell: UITableViewCell,UIScrollViewDelegate {
    
    var weatherList = [WeatherModel]()
    weak var delegate : WeatherTableViewCellDelegate?
    fileprivate var mainBackView:UIView = {
        let view = UIView.init()
        view.backgroundColor = UIColor.white
        return view
    }()
    fileprivate var BackView:UIView = {
        let view = UIView.init()
        view.backgroundColor = UIColor.header
        return view
    }()
    var MianScrollView : UIScrollView = {
        let scrollview = UIScrollView.init()
        scrollview.isPagingEnabled = true
        scrollview.showsHorizontalScrollIndicator = false
        return scrollview
    }()
    
    var pageControll = CustomPageController()
    override init(style: UITableViewCellStyle, reuseIdentifier: String?) {
        super.init(style: style, reuseIdentifier: reuseIdentifier)
        BackView.frame = CGRect.init(x: 10, y: 0, width: keyDeviceWidth-20, height:
            88)
        self.addSubview(BackView)
        mainBackView.frame = CGRect.init(x: 10, y: 0, width: keyDeviceWidth-20, height:
            88)
        self.addSubview(mainBackView)
    }
    //MARK:- 配置cell
    func congigCell(_ isneedClip:Bool,_ isneedPageControll:Bool,_ weatherList : [WeatherModel]){
        
        self.backgroundColor = UIColor.clear
        self.weatherList = weatherList
        self.selectionStyle = .none
        mainBackView.drawFourRectView()
        if isneedClip {
            BackView.drawFourRectView()
        }else{
            BackView.resetNomalView()
            BackView.drawRectView()
        }
        
        
       
        MianScrollView.frame = CGRect.init(x: 0, y: 0, width: keyDeviceWidth-20, height: 88)
        MianScrollView.delegate = self
        mainBackView.addSubview(MianScrollView)
        
        var tempWeatherList = weatherList
        if tempWeatherList.count >= 2{
            let modle = weatherList[0]
            let modle1 = weatherList[weatherList.count-1]
            tempWeatherList.append(modle)
            tempWeatherList.insert(modle1, at: 0)
           }

            for i in 0..<tempWeatherList.count{
                let view = WeatherDetailView.init()
                view.configView(tempWeatherList[i])
                if tempWeatherList.count >= 2{
                    view.tag = i-1
                }else{
                    view.tag = i
                }
                
                view.frame = CGRect.init(x: (keyDeviceWidth-20)*CGFloat(i), y: 0, width: keyDeviceWidth-20, height: 88)
                MianScrollView.addSubview(view)
                let tap = UITapGestureRecognizer.init(target: self, action: #selector(WeatherTableViewCell.tapClick(_:)))
                view.addGestureRecognizer(tap)
            }
            MianScrollView.contentSize = CGSize.init(width: (keyDeviceWidth-20)*CGFloat(tempWeatherList.count), height: 88)
            if weatherList.count >= 2{
               MianScrollView.contentOffset.x = keyDeviceWidth-20
               pageControll.numberOfPages = tempWeatherList.count - 2
            }else{
               pageControll.numberOfPages = tempWeatherList.count
            }
       
            pageControll.pageIndicatorTintColor = UIColor.headerBg
            pageControll.currentPageIndicatorTintColor = UIColor.pageControll
            pageControll.frame = CGRect.init(x: 0, y: 88-14.5, width: keyDeviceWidth - 20, height: 14.5)
            pageControll.addTarget(self, action: #selector(WeatherTableViewCell.pagecontrollValueChange(_:)), for: .touchUpInside)
            mainBackView.addSubview(pageControll)
            if !isneedPageControll{
                pageControll.isHidden = true
            }else if weatherList.count == 1{
                pageControll.isHidden = true
            }else{
                pageControll.isHidden = false
            }
        
    }
    
    @objc func tapClick(_ tap:UITapGestureRecognizer){
    
        delegate?.weatherCellclick(self.weatherList[(tap.view?.tag)!])
        
    }
    func scrollViewDidEndDecelerating(_ scrollView: UIScrollView) {
        if scrollView.contentOffset.x == 0{
            scrollView.setContentOffset(CGPoint.init(x: (keyDeviceWidth-20) * CGFloat(self.weatherList.count), y: 0), animated: false)
        }
        if scrollView.contentOffset.x == (keyDeviceWidth-20) * CGFloat(self.weatherList.count + 1){
            scrollView.setContentOffset(CGPoint.init(x: (keyDeviceWidth-20), y: 0), animated: false)
        }
        pageControll.currentPage = Int(scrollView.contentOffset.x - (keyDeviceWidth-20))/Int(keyDeviceWidth-20)
     }
   @objc func pagecontrollValueChange(_ pagecontroll:UIPageControl){
    UIView.animate(withDuration: 0.3) {
        self.MianScrollView.contentOffset.x = CGFloat(self.pageControll.currentPage+1)*(keyDeviceWidth-20)
      }
    
    }
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    override func setSelected(_ selected: Bool, animated: Bool) {
        super.setSelected(selected, animated: animated)
        
        // Configure the view for the selected state
    }
    
}
