//
//  GANIntervalPicker.swift
//  Remind
//
//  Created by gg on 02/01/2018.
//  Copyright Â© 2018 ganyi. All rights reserved.
//

import Foundation
class GANIntervalPicker: UITableView {
    fileprivate let intervalList = [5, 10, 15, 30, 60]
    
    var selectedData = 0{
        didSet{
            var row = 0
            if intervalList.contains(selectedData){
                for interval in intervalList{
                    if interval == selectedData{
                        break
                    }
                    row += 1
                }
            }
            let selectIndexPath = IndexPath(row: row , section: 0)
            selectRow(at: selectIndexPath, animated: true, scrollPosition: .none)
            
            let cell = cellForRow(at: selectIndexPath) as? GANIntervalPickerCell
            cell?.showSelected = true
        }
    }
    var selectedClosure: ((Int)->())?
    
    
    //MARK:- init-----------------------------------------------------------------------------------------------
    init(frame: CGRect) {
        super.init(frame: frame, style: .plain)
        
        config()
        createContents()
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    override func didMoveToSuperview() {
        super.didMoveToSuperview()
    }
    
    private func config(){
        register(GANIntervalPickerCell.self, forCellReuseIdentifier: "cell")
        
        delegate = self
        dataSource = self
        
        separatorInset = UIEdgeInsets(top: 0, left: 0, bottom: 0, right: 0)
        isScrollEnabled = false
    }
    
    private func createContents(){
        
    }
}


//MARK:- tableview delegate
extension GANIntervalPicker: UITableViewDelegate, UITableViewDataSource{
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return intervalList.count
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 48
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let identifier = "cell"
        let data = intervalList[indexPath.row]
        let cell = tableView.dequeueReusableCell(withIdentifier: identifier) as! GANIntervalPickerCell
        cell.data = data
        return cell
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        let cell = tableView.cellForRow(at: indexPath) as! GANIntervalPickerCell
        cell.showSelected = true
        selectedClosure?(cell.data)
    }
    
    func tableView(_ tableView: UITableView, didDeselectRowAt indexPath: IndexPath) {
        let cell = tableView.cellForRow(at: indexPath) as! GANIntervalPickerCell
        cell.showSelected = false
    }
}
