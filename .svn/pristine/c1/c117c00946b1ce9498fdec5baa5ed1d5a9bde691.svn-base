//
//  StepVC.swift
//  Remind
//
//  Created by gg on 23/12/2017.
//  Copyright © 2017 ganyi. All rights reserved.
//

import Foundation

class StepVC: BasedViewController {
    @IBOutlet weak var contentView: UIView!
    @IBOutlet weak var graphicView: StepGraphicView!
    
    @IBOutlet weak var stepLabel: UILabel!
    @IBOutlet weak var stepUnitLabel: UILabel!
    @IBOutlet weak var distanceLabel: UILabel!
    @IBOutlet weak var highestLabel: UILabel!
    @IBOutlet weak var segment: UISegmentedControl!
    
    ///是否打开目标设置
    fileprivate var isTargetSetOpen = false
    var targetStep = 8000
    
    ///默认按周统计
    fileprivate var currentDisplayMode: DisplayMode = .day7
    
    ///需绘制的数据模型列表
    fileprivate var stepsDetailModel = StepsDetailModel(){
        didSet{
            
            graphicView.stepsDetailModel = stepsDetailModel
        }
    }
    
    var isLocked = false
    var selector: GANSelector?
    
    
    ///定时器
    private var timer: Timer?
    
    //MARK:- init------------------------------------------------------------------------
    override func viewDidLoad() {
        super.viewDidLoad()
        
        config()
        createContents()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        
        //获取数据
        
        //如果已打开 则关闭    t
        if isTargetSetOpen {
        
        }
    }
    
    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
      
        dismissSelector()
        
        timer?.invalidate()
    }

    
    private func config(){
        view.backgroundColor = .separator
        
        contentView.layer.cornerRadius = .cornerRadius
        
        
        DataManager.share().getTargetStep { (codeResult, message, targetStep, _, _) in
            self.targetStep = targetStep
        }
    }
    
    private func createContents(){
        if timer == nil {
            //timer = Timer.scheduledTimer(timeInterval: 1, target: self, selector: #selector(updateRealStepAndDistanceM), userInfo: nil, repeats: true)
        }
    }
    
    //MARK:- navigationBarItem 点击事件(设置目标步数)
    @IBAction func navigationItemCLick(_ sender: UIBarButtonItem){
        edit(withSelectorType: .targetStep, withDefultValue: targetStep)
    }
    
    @IBAction func segmentedValueChange(_ sender: UISegmentedControl) {
    }
}
