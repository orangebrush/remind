//
//  HomeEdtingView.swift
//  Remind
//
//  Created by zxd on 2017/12/5.
//  Copyright © 2017年 ganyi. All rights reserved.
//

import UIKit
protocol edtingViewDegate:class{
    func edtingBtnClick(_ row:Int)
}
class HomeEdtingView: UIView ,UITableViewDelegate,UITableViewDataSource,UIGestureRecognizerDelegate{
    weak var delegate : edtingViewDegate?
    var eventImageArr = [#imageLiteral(resourceName: "edting_edting"),#imageLiteral(resourceName: "edting_switch"),#imageLiteral(resourceName: "edting_delete")]
    var eventText = ["编辑提醒","关闭提醒","删除提醒"]
   
    
    lazy var edtingView : UIView = {
        let view = UIView.init()
        view.backgroundColor = UIColor.clear
        return view
    }()
    
    lazy var tableView : UITableView = {
        let tableView = UITableView.init(frame:CGRect.zero,style:.plain)
        tableView.rowHeight = 40
        tableView.backgroundColor = UIColor.clear
        return tableView
    }()
    fileprivate lazy var imageView : UIImageView = {
       let imageView = UIImageView.init()
       imageView.image = UIImage(named:"edtingBg")
        return imageView
    }()
    override init(frame: CGRect) {
        super.init(frame: frame)
        self.addSubview(edtingView)
        edtingView.addSubview(imageView)
        edtingView.addSubview(tableView)
        tableView.delegate = self
        tableView.dataSource = self
        tableView.separatorStyle = .singleLine
        tableView.separatorColor = UIColor.separator
        tableView.separatorInset = UIEdgeInsetsMake(0, 0, 0, 0)
        imageView.snp.makeConstraints { (make) in
            make.top.left.bottom.right.equalTo(0)
        }
        imageView.layer.shadowColor = UIColor(colorHex: 0x666666).cgColor
        imageView.layer.shadowOpacity = 0.5
        imageView.layer.shadowRadius = 20
        imageView.layer.shadowOffset = CGSize.init(width: 0, height: 0)
        tableView.snp.makeConstraints { (make) in
            make.top.left.bottom.right.equalTo(0)
        }
        self.addgesture()
        
    }
    
    //MARK:- 添加手势
    func addgesture(){
        let tap = UITapGestureRecognizer.init(target: self, action: #selector(HomeEdtingView.viewTap))
        tap.delegate = self
        self.addGestureRecognizer(tap)
        
        let swip = UISwipeGestureRecognizer.init(target: self, action: #selector(HomeEdtingView.viewSwip(_:)))
        swip.direction = .up
        swip.delegate = self
        self.addGestureRecognizer(swip)
        let swip1 = UISwipeGestureRecognizer.init(target: self, action: #selector(HomeEdtingView.viewSwip(_:)))
        swip1.delegate = self
        swip1.direction = .down
        self.addGestureRecognizer(swip1)
        let swip2 = UISwipeGestureRecognizer.init(target: self, action: #selector(HomeEdtingView.viewSwip(_:)))
        swip2.direction = .left
        swip2.delegate = self
        self.addGestureRecognizer(swip2)
        let swip3 = UISwipeGestureRecognizer.init(target: self, action: #selector(HomeEdtingView.viewSwip(_:)))
        swip3.direction = .right
        swip3.delegate = self
        self.addGestureRecognizer(swip3)
    }
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    @objc func viewSwip(_ swip:UISwipeGestureRecognizer){
        if !self.edtingView.frame.contains(swip.location(in: self)){
            self.removeFromSuperview()
        }
    }
    
    @objc func viewTap(_ tap:UITapGestureRecognizer){

        if !self.edtingView.frame.contains(tap.location(in: self)){
            self.removeFromSuperview()
        }
     }
    
    func configView(_ top:CGFloat,_ card:Card?,_ event:Event?,_ client:EventClient?){
        let height : CGFloat = 130
        var top1 = top + 36 - 10
        if top1 > UIScreen.main.bounds.height/5*3{
            top1 = top1 - height - 36 + 10
            tableView.snp.updateConstraints { (make) in
                make.top.equalTo(0)
                make.bottom.equalTo(-10)
            }
        }else{
            tableView.snp.updateConstraints { (make) in
                make.top.equalTo(10)
                make.bottom.equalTo(0)
            }
        }
        edtingView.snp.updateConstraints { (make) in
            make.width.equalTo(153)
            make.right.equalTo(-10)
            make.top.equalTo(top1)
            make.height.equalTo(height)
        }
        if (card != nil) {
            switch card!.type! {
            case .weather(_, _):
                self.eventImageArr = [#imageLiteral(resourceName: "card_all"),#imageLiteral(resourceName: "card_addcity"),#imageLiteral(resourceName: "card_seting")]
                self.eventText = ["查看全部","城市管理","卡片设置"]
                break
            case .birthday(_, _):
                self.eventImageArr = [#imageLiteral(resourceName: "card_all"),#imageLiteral(resourceName: "card_addcity"),#imageLiteral(resourceName: "card_seting")]
                self.eventText = ["查看全部","添加生日","卡片设置"]
                break
            case .event(_, _):
                self.eventImageArr = [#imageLiteral(resourceName: "card_all"),#imageLiteral(resourceName: "card_addcity"),#imageLiteral(resourceName: "card_seting")]
                self.eventText = ["查看全部","添加重要事件","卡片设置"]
                break
            case .stock(_, _):
                self.eventImageArr = [#imageLiteral(resourceName: "card_all"),#imageLiteral(resourceName: "card_addcity"),#imageLiteral(resourceName: "card_seting")]
                self.eventText = ["查看全部","添加股票","卡片设置"]
                break
            case .festival(_, _):
                self.eventImageArr = [#imageLiteral(resourceName: "card_all"),#imageLiteral(resourceName: "card_seting")]
                self.eventText = ["查看全部","卡片设置"]
                break
            case .step(_, _):
                self.eventImageArr = [#imageLiteral(resourceName: "card_all"),#imageLiteral(resourceName: "card_seting")]
                self.eventText = ["查看全部","卡片设置"]
                break
            case .eventClient(_, _):
                self.eventImageArr = [#imageLiteral(resourceName: "card_all"),#imageLiteral(resourceName: "card_seting")]
                self.eventText = ["查看全部","卡片设置"]
                break
            case .holiday(_, _):
                self.eventImageArr = [#imageLiteral(resourceName: "card_all"),#imageLiteral(resourceName: "card_addcity"),#imageLiteral(resourceName: "card_seting")]
                self.eventText = ["查看全部","添加股票","卡片设置"]
                break
            }
            self.tableView.reloadData()
        }
        
        
        
    }
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        self.removeFromSuperview()
        delegate?.edtingBtnClick(indexPath.row)
    }
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return self.eventImageArr.count
    }
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        var cell = tableView.dequeueReusableCell(withIdentifier: "cellID")
        if cell == nil{
            cell = UITableViewCell.init(style: .default, reuseIdentifier: "cellID")
        }
        while ((cell?.contentView.subviews.last) != nil) {
            cell?.contentView.subviews.last?.removeFromSuperview()
        }
        cell?.selectionStyle = .none
        cell?.backgroundColor = UIColor.clear
        self.resetview(eventImageArr[indexPath.row], eventText[indexPath.row], cell!)
        if indexPath.row == tableView.numberOfRows(inSection: 0)-1{
            cell?.separatorInset = UIEdgeInsetsMake(0, 0, 0, (cell?.frame.width)!)
        }
        return cell!
    }
    
   
    func resetview(_ image:UIImage,_ text:String,_ cell:UITableViewCell){
        let view = UIView.init(frame: CGRect.init(x: 0, y: 0, width: 153, height: 40))
        
        let image1 = UIImageView.init(image: image)
        view.addSubview(image1)
        
        let label = UILabel.init()
        label.font = UIFont.navNormal
        label.textColor = UIColor.word
        label.text = text
        view.addSubview(label)
        
        image1.snp.makeConstraints { (make) in
            make.left.equalTo(15)
            make.centerY.equalToSuperview()
            make.width.equalTo(image.size.width)
            make.height.equalTo(image.size.height)
        }
        
        label.snp.makeConstraints { (make) in
            make.left.equalTo(50)
            make.width.equalTo(100)
            make.height.equalTo(30)
            make.centerY.equalToSuperview()
        }
        cell.backgroundView = view
        
    }
    //MARK:- 解决手势响应覆盖掉cell的点击事件
    func gestureRecognizer(_ gestureRecognizer: UIGestureRecognizer, shouldReceive touch: UITouch) -> Bool {
        if (touch.view?.superview?.isKind(of:UITableViewCell.self))!{
            return false
        }
        return true
    }
    
   
}
