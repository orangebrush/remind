//
//  detailTableViewCell.swift
//  Remind
//
//  Created by zxd on 2017/12/20.
//  Copyright © 2017年 ganyi. All rights reserved.
//

import UIKit

class detailTableViewCell: UITableViewCell {

    fileprivate lazy var titleLabel : UILabel = {
        let label = UILabel()
        label.font = UIFont.content
        label.textColor = UIColor.subSubWord
        return label
    }()
    fileprivate lazy var contentLabel : UILabel = {
        let label = UILabel()
        label.font = UIFont.normal
        label.numberOfLines = 0
        label.textColor = UIColor.word
        return label
    }()
    fileprivate lazy var cutLabel : UILabel = {
        let label = UILabel()
        label.backgroundColor = UIColor.separator
        return label
    }()
    override init(style: UITableViewCellStyle, reuseIdentifier: String?) {
        super.init(style: style, reuseIdentifier: reuseIdentifier)
        self.selectionStyle = .none
        self.addSubview(titleLabel)
        self.addSubview(contentLabel)
        self.addSubview(cutLabel)
        titleLabel.snp.makeConstraints { (make) in
            make.left.equalTo(20)
            make.top.equalTo(13)
            make.height.equalTo(22)
            make.width.equalTo(96)
        }
        contentLabel.snp.makeConstraints { (make) in
            make.left.equalTo(119)
            make.top.equalTo(13)
            make.height.equalTo(10)
            make.width.equalTo(keyDeviceWidth-119-20-20)
        }
        cutLabel.snp.makeConstraints { (make) in
            make.left.equalTo(20)
            make.bottom.equalTo(0)
            make.right.equalTo(-20)
            make.height.equalTo(kLineHeight)
        }
    }
    func configView(_ title:String, _ content:String,_ showCut:Bool){
        titleLabel.attributedText = self.getStrHeight(UIFont.init(withNormalFontSize: 14), title, 2).0
        contentLabel.attributedText = self.getStrHeight(UIFont.init(withNormalFontSize: 14), content, 2).0
        contentLabel.snp.updateConstraints { (make) in
            make.height.equalTo(self.getStrHeight(UIFont.init(withNormalFontSize: 14), content, 2).1+2)
        }
        titleLabel.snp.updateConstraints { (make) in
            make.height.equalTo(self.getStrHeight(UIFont.init(withNormalFontSize: 14), title, 2).1+2)
        }
        if showCut {
            cutLabel.isHidden = true
        }else{
            cutLabel.isHidden = false
        }
        
      }
    func getStrHeight(_ font:UIFont,_ str:String,_ lineSpace:CGFloat)->(NSMutableAttributedString,CGFloat){
        let atr = NSMutableAttributedString.init(string: str)
        let pary = NSMutableParagraphStyle.init()
        pary.lineSpacing = lineSpace
        atr.addAttributes([NSAttributedStringKey.font:font,NSAttributedStringKey.paragraphStyle:pary], range: NSRange.init(location: 0, length: str.count))
        let rect = atr.boundingRect(with: CGSize.init(width: keyDeviceWidth-119-20-20, height: 1000), options: NSStringDrawingOptions.usesLineFragmentOrigin, context: nil)
        return (atr,rect.size.height)
        
    }
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    override func setSelected(_ selected: Bool, animated: Bool) {
        super.setSelected(selected, animated: animated)

        // Configure the view for the selected state
    }

}
