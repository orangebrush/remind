//
//  festivalTableViewCell.swift
//  Remind
//
//  Created by zxd on 2017/12/6.
//  Copyright © 2017年 ganyi. All rights reserved.
//

import UIKit

class festivalTableViewCell: UITableViewCell {
    
    var backimageView : UIImageView = {
        let img = UIImageView.init()
        return img
    }()
    var festivalLable : UILabel = {
        let lable = UILabel.init()
        lable.font =  UIFont.init(withNormalFontSize:14)
        lable.textColor = UIColor.word
        return lable
    }()
    var timeLabel: UILabel = {
        let lable = UILabel.init()
        lable.font = UIFont.content
        lable.textColor = UIColor.subSubWord
        return lable
    }()
    var cutLable : UILabel = {
        let lable = UILabel.init()
        lable.backgroundColor = UIColor.separator
        return lable
    }()
    var fristLable : UILabel = {
        let lable = UILabel.init()
        lable.font = UIFont.init(withNormalFontSize: 13)
        lable.textAlignment = .right
        lable.textColor = UIColor.word
        return lable
    }()
    fileprivate var mainBackView:UIView = {
        let view = UIView.init()
        view.backgroundColor = UIColor.white
        return view
    }()
    fileprivate var BackView:UIView = {
        let view = UIView.init()
        view.backgroundColor = UIColor.header
        return view
    }()
    fileprivate lazy var topBackView:UIView = {
        let view = UIView.init()
        view.layer.cornerRadius = 2
        view.backgroundColor = UIColor.black.withAlphaComponent(0.2)
        return view
    }()
    fileprivate lazy var topLabel : UILabel = {
        let label = UILabel.init()
        label.textColor = UIColor.white
        label.textAlignment = .center
        label.font = UIFont.init(withNormalFontSize: 22)
        return label
    }()
    fileprivate lazy var topLabel1 : UILabel = {
        let label = UILabel.init()
        label.textColor = UIColor.white
        label.textAlignment = .center
        label.font = UIFont.init(withNormalFontSize: 9)
        return label
    }()
    
    override init(style: UITableViewCellStyle, reuseIdentifier: String?) {
        super.init(style: style, reuseIdentifier: reuseIdentifier)
        self.backgroundColor = UIColor.clear
        self.selectionStyle = .none
        self.clipsToBounds = false
        BackView.frame = CGRect.init(x: 10, y: 0, width: keyDeviceWidth-20, height:52)
        self.contentView.addSubview(BackView)
        mainBackView.frame = CGRect.init(x: 10, y: 0, width: keyDeviceWidth-20, height:52)
        self.contentView.addSubview(mainBackView)
        mainBackView.addSubview(backimageView)
        mainBackView.addSubview(festivalLable)
        mainBackView.addSubview(cutLable)
        mainBackView.addSubview(timeLabel)
        mainBackView.addSubview(fristLable)
        mainBackView.addSubview(topBackView)
        mainBackView.addSubview(topLabel)
        mainBackView.addSubview(topLabel1)
        festivalLable.snp.makeConstraints { (make) in
            make.top.equalTo(0)
            make.left.equalTo(15)
            make.bottom.equalTo(0)
        }
        timeLabel.snp.makeConstraints { (make) in
            make.left.equalTo(festivalLable.snp.right).offset(5)
            make.top.equalTo(0)
            make.bottom.equalTo(0)
            make.right.lessThanOrEqualTo(-60)
        }
        cutLable.snp.makeConstraints { (make) in
            make.left.equalTo(20)
            make.right.equalTo(0)
            make.bottom.equalTo(0)
            make.height.equalTo(kLineHeight)
        }
        fristLable.snp.makeConstraints { (make) in
            make.top.bottom.equalTo(0)
            make.right.equalTo(-15)
        }
        
        topBackView.snp.makeConstraints { (make) in
            make.width.equalTo(74)
            make.height.equalTo(48)
            make.top.left.equalTo(10)
        }
        topLabel.snp.makeConstraints { (make) in
            make.width.equalTo(74)
            make.height.equalTo(30)
            make.top.left.equalTo(10)
        }
        topLabel1.snp.makeConstraints { (make) in
            make.width.equalTo(74)
            make.height.equalTo(18)
            make.left.equalTo(10)
            make.top.equalTo(topLabel.snp.bottom)
        }
        backimageView.snp.makeConstraints { (make) in
            make.top.bottom.left.right.equalTo(0)
        }
        
        
    }
    
    func configCell(_ isneedClip: Bool,_ festival:FestivalModel,isfrist:Bool){
        
        mainBackView.resetNomalView()
        BackView.resetNomalView()
        if isfrist {
            let height = CGFloat(420)/CGFloat(1065)*(keyDeviceWidth-20)
            mainBackView.frame.size.height = height
            BackView.frame.size.height = height
            backimageView.snp.updateConstraints { (make) in
                make.top.bottom.left.right.equalTo(0)
            }
            mainBackView.drawTopRectView()
            topBackView.isHidden = false
            backimageView.isHidden = false
            festivalLable.isHidden = true
            timeLabel.isHidden = true
            fristLable.isHidden = true
            topLabel.isHidden = false
            topLabel1.isHidden = false
            if isneedClip{
                mainBackView.drawFourRectView()
                BackView.drawRectView()
                cutLable.isHidden = true
            }else{
                cutLable.isHidden = false
            }
            if festival.banner != nil{
                backimageView.kf.setImage(with: festival.banner)
            }
            
        }else{
            let height : CGFloat = 52
            mainBackView.frame.size.height = height
            BackView.frame.size.height = height
            backimageView.snp.updateConstraints { (make) in
                make.top.bottom.left.right.equalTo(0)
            }
            topBackView.isHidden = true
            backimageView.isHidden = true
            festivalLable.isHidden = false
            timeLabel.isHidden = false
            fristLable.isHidden = false
            topLabel.isHidden = true
            topLabel1.isHidden = true
            if isneedClip{
                mainBackView.drawRectView()
                BackView.drawRectView()
                cutLable.isHidden = true
            }else{
                cutLable.isHidden = false
            }
        }
        
        
        festivalLable.text = festival.name
        let str1 = festival.lunarText != "" ? "\(festival.dateText) \(festival.weekday) (\(festival.lunarText))" :  "\(festival.dateText) \(festival.weekday)"
        timeLabel.text = str1
        fristLable.text = "\(festival.leftDay)"
        let tempStr1 = festival.date.formatString(with: "MM.dd")
        let tempStr2 = festival.lunarText != "" ? festival.lunarText + " " + festival.date.formatString(with: "E") : festival.date.formatString(with: "E")
        topLabel.text = tempStr1
        topLabel1.text = tempStr2
        
    }
    
    func getAttrbuteStr(_ str1:String,_ str2:String)->NSMutableAttributedString{
        let str = str1 + "\n" + str2
        let attr = NSMutableAttributedString.init(string: str)
        attr.addAttributes([NSAttributedStringKey.font:UIFont.init(withNormalFontSize: 22)], range: NSRange.init(location: 0, length: str1.count))
        attr.addAttributes([NSAttributedStringKey.font:UIFont.init(withNormalFontSize: 9)], range: NSRange.init(location: str1.count, length: str2.count))
        return attr
    }
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    override func setSelected(_ selected: Bool, animated: Bool) {
        super.setSelected(selected, animated: animated)
        
    }
    
}
