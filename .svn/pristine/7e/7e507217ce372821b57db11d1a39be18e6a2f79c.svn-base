//
//  GANCollectionCell.swift
//  Remind
//
//  Created by gg on 25/01/2018.
//  Copyright © 2018 ganyi. All rights reserved.
//

import Foundation
class GANCollectionCell: UICollectionViewCell {
    private var markLabel: UILabel!
    private var solarLabel: UILabel!
    private var lunarLabel: UILabel!
    
    var markText: String? {
        didSet{
            if let text = markText{
                if text == "休"{
                    markLabel.textColor = UIColor(colorHex: 0x009249)
                }else if text == "班" {
                    markLabel.textColor = UIColor(colorHex: 0xff0000)
                }
            }
            markLabel.text = markText
        }
    }
    
    var date: Date? {
        didSet{
            solarLabel.text = date?.formatString(with: "d")
            if let d = date{
                if d > Date.init(withDateStr: "1900-1-31", withFormatStr: "yyy-M-d") && d < Date.init(withDateStr: "2049-12-31", withFormatStr: "yyy-M-d"){                    
                    let lunarDate = transformGregorianToLunar(byDate: d)
                    lunarLabel.text = lunarDayList[Int(lunarDate.lunarDay) - 1]
                }
            }
        }
    }
    
    //日历相关属性
    var holiday: Holiday?{
        didSet{
            if let holi = holiday{
                if holi.status == 1{            //放假
                    markLabel.text = "休"
                    markLabel.textColor = isToday ? .white : UIColor(colorHex: 0x009245)
                }else if holi.status == 2{      //调休
                    markLabel.text = "班"
                    markLabel.textColor = isToday ? .white : UIColor(colorHex: 0xff8000)
                }
                backgroundColor = isToday ? UIColor(colorHex: 0xff8000) : UIColor(colorHex: 0xedf8ee)
            }else{
                markLabel.text = nil
                updateBackgroundColor()
            }
        }
    }
    var festival: FestivalModel?{
        didSet{
            if let fest = festival{
                lunarLabel.text = fest.name
                lunarLabel.textColor = isToday ? .white : UIColor(colorHex: 0xff8000)
            }else{
                updateLunarLabelColor()
            }
        }
    }
    
    
    //普通属性
    var isThisMonth = false{
        didSet{
            updateSolarLabelColor()
            updateLunarLabelColor()
        }
    }
    
    var isToday = false{
        didSet{
            updateBackgroundColor()
            updateSolarLabelColor()
            updateLunarLabelColor()
        }
    }
    
    override var isSelected: Bool{
        didSet{            
            updateBackgroundColor()
            updateSolarLabelColor()
            updateLunarLabelColor()
            
            let anim = CABasicAnimation(keyPath: "transform.scale")
            anim.fromValue = 1.2
            anim.toValue = 1
            anim.duration = 0.3
            anim.timingFunction = CAMediaTimingFunction(name: kCAMediaTimingFunctionEaseInEaseOut)
            anim.isRemovedOnCompletion = true
            layer.add(anim, forKey: nil)
        }
    }
    
    ///刷新背景颜色
    private func updateBackgroundColor(){
        if isToday{
            backgroundColor = UIColor(colorHex: 0xff8000)
        }else{
            if isThisMonth{
                backgroundColor = isSelected ? UIColor(colorHex: 0xeeeeee) : .clear
            }else{
                backgroundColor = UIColor(colorHex: 0xffffff)
            }
        }
    }
    
    ///刷新公历文字颜色
    private func updateSolarLabelColor(){
        if isToday{
            solarLabel.textColor = .white
        }else{
            solarLabel.textColor = isThisMonth ? UIColor(colorHex: 0x000000) : UIColor(colorHex: 0xcccccc)
        }
    }
    
    ///刷新农历文字颜色
    private func updateLunarLabelColor(){
        if isToday{
            lunarLabel.textColor = .white
        }else{
            lunarLabel.textColor = isThisMonth ? UIColor(colorHex: 0x666666) : UIColor(colorHex: 0xcccccc)
        }
    }
    
    //MARK:- init-----------------------------------------------------------------
    override init(frame: CGRect) {
        super.init(frame: frame)
        
        config()
        createContents()
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    private func config(){
        backgroundColor = .clear
        
        layer.cornerRadius = 4
        
        
    }
    
    private func createContents(){
        
        let markLabelFrame = CGRect(x: 0, y: 0, width: 14, height: 14)
        markLabel = UILabel(frame: markLabelFrame)
        markLabel.font = UIFont(withNormalFontSize: 9)
        markLabel.textColor = UIColor(colorHex: 0x009249)
        markLabel.textAlignment = .center
        addSubview(markLabel)
        
        let solarLabelFrame = CGRect(x: 0, y: 10, width: frame.width, height: 18)
        solarLabel = UILabel(frame: solarLabelFrame)
        solarLabel.font = UIFont(withNormalFontSize: 16)
        solarLabel.textColor = UIColor(colorHex: 0x000000)
        solarLabel.textAlignment = .center
        addSubview(solarLabel)
        
        let lunarLabelFrame = CGRect(x: 0, y: 10 + 18, width: frame.width, height: 16)
        lunarLabel = UILabel(frame: lunarLabelFrame)
        lunarLabel.font = UIFont(withNormalFontSize: 9)
        lunarLabel.textColor = UIColor(colorHex: 0x666666)
        lunarLabel.textAlignment = .center
        addSubview(lunarLabel)
    }
}
