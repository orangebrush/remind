//
//  RetrievePasswordViewController.swift
//  Remind
//
//  Created by dong on 2018/1/8.
//  Copyright © 2018年 ganyi. All rights reserved.
//

final class RetrievePasswordViewController: BaseLoginViewController {
    
    fileprivate lazy var loginRegisterView: LoginRegisterView = {
        let loginRegisterView = LoginRegisterView(title: "忘记密码", type: .big, { (view) in
            view.addTextField { (textField) in
                textField.placeholder = "手机号"
                textField.setRightViewType(type: .phone)
            }
            view.addTextField { (textField) in
                textField.placeholder = "验证码"
                textField.setRightViewType(type: .code)
                textField.loginGetCodeView?.codeButton.addTarget(self, action: #selector(getCode), for: .touchUpInside)
            }
        })
        
        loginRegisterView.button.setTitle("下一步", for: .normal)
        loginRegisterView.button.addTarget(self, action: #selector(nextStep), for: .touchUpInside)
        return loginRegisterView
    }()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        // Do any additional setup after loading the view.
        view.addSubview(loginRegisterView)
        loginRegisterView.snp.makeConstraints { (make) in
            make.edges.equalToSuperview()
        }
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
    }
    
}

extension RetrievePasswordViewController {
    
    @objc fileprivate func getCode(button: MemberTimerButton) {
        let phoneNumber = loginRegisterView.text
        
        let (isValid, validateError) = LoginValidate.validatePhoneNumber(text: phoneNumber)
        guard isValid else {
//            MSGToast.show(validateError, inView: self.view)
            return
        }
        
//        MSGToast.show("获取中", isloading: true, inView: view)
//        LoginService.sendPhoneMessage(phoneNumber: phoneNumber, source: .retrievePassword, successHandler: { (_) in
//            MSGToast.cancel()
//            button.scheduleTimer()
//        }) { (interval, error) in
//            MSGToast.show(error.errorMessage, inView: self.view)
//            if let interval = interval {
//                button.scheduleTimer(leftTime: interval)
//            }
//        }
    }
    
    @objc fileprivate func nextStep() {
        let phoneNumber = loginRegisterView.text
        let code = loginRegisterView.text2
        
        let (isValid, validateError) = LoginValidate.validatePhoneNumber(text: phoneNumber)
        guard isValid else {
//            MSGToast.show(validateError, inView: self.view)
            return
        }
        
        view.endEditing(true)
//        MSGToast.show("请稍候", isloading: true, inView: view)
//        LoginService.validateMessageCode(phoneNumber: phoneNumber, code: code, source: .retrievePassword, successHandler: { (_) in
//            MSGToast.cancel()
//            let viewController = RetrievePasswordSettingNewPasswordViewController(phoneNumber: phoneNumber)
//            self.navigationController?.pushViewController(viewController, animated: true)
//        }) { (_, error) in
//            MSGToast.show(error.errorMessage, inView: self.view)
//        }
    }
    
}
