//
//  GANCalendarDefaultCell.swift
//  Remind
//
//  Created by gg on 24/01/2018.
//  Copyright © 2018 ganyi. All rights reserved.
//

import Foundation
class GANCalendarDefaultCell: UITableViewCell {
    
    ///主标题、副标题
    private var keys: [String]?{
        didSet{
            guard let list = keys, list.count == 2 else{
                keyLabel?.attributedText = nil
                return
            }
            let title = list[0]
            let subTitle = " " + list[1]
            
            let attributedString = NSMutableAttributedString(string: title + subTitle, attributes: [NSAttributedStringKey.foregroundColor: UIColor(colorHex: 0x333333), NSAttributedStringKey.font: UIFont(withNormalFontSize: 12)])
            attributedString.addAttribute(NSAttributedStringKey.foregroundColor, value: UIColor(colorHex: 0x666666), range: NSMakeRange(title.count, subTitle.count))
            keyLabel?.attributedText = attributedString
        }
    }
    
    ///剩余天数
    private var value: String?{
        didSet{
            valueLabel?.text = value
        }
    }
    
    var holidayList = [Holiday](){
        didSet{
            guard let nearestHoliday = holidayList.first else{
                return
            }
            
            var keysList = ["\(nearestHoliday.name)放假\(nearestHoliday.numberOfCount)天"]
            
            if holidayList.count > 2{
                let first = holidayList.first!
                let last = holidayList.last!
                let firstText = first.beginDate.formatString(with: "M月d日")
                let lastText = last.beginDate.formatString(with: "M月d日")
                keysList.append("(" + firstText + "~" + lastText + ")")
            }
            keys = keysList
            let interval = nearestHoliday.beginDate.timeIntervalSince(Date())
            let intervalDay = Int(interval / 24 / 60 / 60)
            value = "\(intervalDay)天后"
        }
    }
    
    var festival: (Bool, Date?, FestivalModel)? {
        didSet{
            guard let fest = festival else{
                festivalImageView?.isHidden = true
                return
            }
            
            guard let selDate = fest.1 else{
                festivalImageView?.isHidden = true
                return
            }
            
            let date = fest.2.date
            
            let interval = date.timeIntervalSince(selDate)
            let intervalDay = Int(interval / 24 / 60 / 60)
            
            if intervalDay <= 3 {
                keys = nil
                value = nil
                festivalImageView?.isHidden = false
                if let url = fest.2.banner{
                    do{
                        if let imageData = try? Data.init(contentsOf: url){
                            festivalImageView?.image = UIImage(data: imageData)
                        }
                    }catch let error{
                        print("festival image data error: \(error)")
                    }
                }
            }else{
                var keysList = ["\(fest.2.name)"]
                
                let lunar = transformGregorianToLunar(byDate: date)
                let subText = "(" + date.formatString(with: "M月d日 ") + date.weekdayString() + " " + lunarMonthList[lunar.lunarMonth - 1] + lunarDayList[Int(lunar.lunarDay) - 1] + ")"
                keysList.append(subText)
                
                keys = keysList
                
                value = "\(intervalDay)天后"
            }
        }
    }
    
    private var keyLabel: UILabel?
    private var valueLabel: UILabel?
    private var festivalImageView: UIImageView?
    
    init(reuseIdentifier: String?) {
        super.init(style: .default, reuseIdentifier: reuseIdentifier)

        config()
        createContents()
    }
    
    override func didMoveToSuperview() {
        superview?.didMoveToSuperview()
    }        
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    //重写 解决初始化frame bug
    override var frame: CGRect{
        set{
            var f = newValue
            f.size.width = view_size.width - .edge10 * 2
            super.frame = f
        }
        get{
            return super.frame
        }
    }
    
    private func config(){
        backgroundColor = UIColor(colorHex: 0xf6f6f6)
        
        selectionStyle = .none
    }
    
    
    private func createContents(){
        
        let keyLabelFrame = CGRect(x: .edge10 + 10, y: 0, width: frame.width - 80 - 10 - .edge10, height: frame.height)
        keyLabel = UILabel(frame: keyLabelFrame)
        contentView.addSubview(keyLabel!)
        
        let valueLabelFrame = CGRect(x: contentView.frame.width - .edge10 - 10 - 80, y: 0, width: 80, height: frame.height)
        valueLabel = UILabel(frame: valueLabelFrame)
        valueLabel?.textColor = UIColor(colorHex: 0x333333)
        valueLabel?.font = UIFont(withNormalFontSize: 12)
        valueLabel?.textAlignment = .right
        contentView.addSubview(valueLabel!)
        
        let festivalImageFrame = CGRect(x: 0, y: 0, width: frame.width, height: frame.width / 1065 * 420)
        festivalImageView = UIImageView(frame: festivalImageFrame)
        festivalImageView?.isHidden = true
        festivalImageView?.contentMode = .scaleAspectFill
        contentView.addSubview(festivalImageView!)
    }
}
