//
//  Frequency+Extension.swift
//  Remind
//
//  Created by gg on 14/12/2017.
//  Copyright © 2017 ganyi. All rights reserved.
//

import Foundation
extension FrequencyVC{
    //MARK:- 点击编辑
    func edit(withFrequencySelectorType frequencySelectorType: FrequencySelectorType, withDefultValue defaultValue: Any? = nil){
        guard !isLocked else {
            return
        }
        isLocked = true
        
        //创建编辑器
        tableView.isUserInteractionEnabled = false
        if let sel = frequencySelector{          //先移除
            (navigationController as? EventEditorNavigationController)?.setEffect(flag: false)
            UIView.animate(withDuration: 0.3, delay: 0, options: .curveEaseInOut, animations: {
                sel.frame.origin.y = view_size.height
            }, completion: { (completed) in
                self.isLocked = false
                guard completed else{
                    return
                }
                self.frequencySelector = nil
                sel.layer.removeAllAnimations()
                sel.removeFromSuperview()
                
                self.addNewSelector(withFrequencySelectorType: frequencySelectorType, withDefaultValue: defaultValue)
            })
        }else{                          //直接推出
            self.addNewSelector(withFrequencySelectorType: frequencySelectorType, withDefaultValue: defaultValue)
            self.isLocked = false
        }
    }
    
    
    //MARK:- 添加新选择器
    private func addNewSelector(withFrequencySelectorType frequencySelectorType: FrequencySelectorType, withDefaultValue defaultValue: Any?){
        
        (navigationController as? EventEditorNavigationController)?.setEffect(flag: true)
        
        frequencySelector = FrequencySelector(withFrequencySelectorType: frequencySelectorType, withDefaultValue: defaultValue)
        frequencySelector?.defaultValue = defaultValue
        
        frequencySelector?.closure = {
            confirm, frequencySelectorValueType in
            
            self.tableView.isUserInteractionEnabled = true
            (self.navigationController as? EventEditorNavigationController)?.setEffect(flag: false)
            
            self.setSelectorBackground(flag: false)
            
            UIView.animate(withDuration: 0.3, delay: 0, options: .curveEaseInOut, animations: {
                self.frequencySelector?.frame.origin.y = view_size.height
            }, completion: { (completed) in
                guard completed else{
                    return
                }
                self.frequencySelector?.removeFromSuperview()
            })
            
            //处理数据
            guard confirm, let selValueType = frequencySelectorValueType else {
                return
            }
            
            //为新数据赋值
            switch selValueType {
            case .baseOnWeek(let isOnWeek):
                self.frequency?.baseOnWeek = isOnWeek
            case .cycle(let cycle):
                self.frequency?.frequencyCycle = cycle
                self.frequency?.per = 1
            case .interval(let per):
                self.frequency?.per = per
            case .date(let date):
                let calendar = Calendar.current
                var oldComponent = calendar.dateComponents([.year, .month, .day, .hour, .minute], from: self.beginDate)
                let newComponent = calendar.dateComponents([.year, .month, .day], from: date)
                oldComponent.year = newComponent.year ?? 2020
                oldComponent.month = newComponent.month ?? 1
                oldComponent.day = newComponent.day ?? 1
                let newDate = calendar.date(from: oldComponent) ?? self.beginDate
                self.beginDate = newDate
            }
            
            let firstIndexPath = IndexPath(row: 0, section: 0)
            self.tableView.scrollToRow(at: firstIndexPath, at: .bottom, animated: false)
            
            self.tableView.reloadData()
            self.tableView.beginUpdates()
            self.tableView.endUpdates()
        }
        
        setSelectorBackground(flag: true)
        
        view.window?.bringSubview(toFront: frequencySelector!)
        view.window?.addSubview(frequencySelector!)
    }
}
